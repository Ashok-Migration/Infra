name: $(resourceGroupName)

variables:
  - name: PoolName
    value: "tasmumsiagents"

  #- name: vmImage
  #  value: windows-latest
  - name: templateFilePath
    value: DeploymentOrchestration/Environments/CPP/PRE/rg-cpp-apps-cog-pre-we-01/deploy.json
  - name: parameterFilePath
    value:
  - name: location
    value: westeurope
  - name: resourceGroupName
    value: rg-cpp-apps-cog-pre-we-01
  - name: serviceConnection
    value: sqcp-ado-spn-pre
  - name: subscriptionId
    value: 8964f3c1-44f5-4094-80eb-4334845bdfb1
  - name: storageResourceGroup
    value: rg-cpp-apps-str-pre-we-01
  - name: storageAccountName
    value: stcppappsstrprewe01
  - name: datasourceScriptPath
    value: Modules/ARM/SearchService/2020-03-13/Scripts/link.datasource.indexer.ps1
  - name: scriptPath
    value: Modules/ARM/SearchService/2020-03-13/Scripts/create.index.indexer.ps1
  - name: searchServicesName
    value: srch-cpp-apps-cog-pre-we-01
  - name: indexSchemaFile
    value: Modules/ARM/SearchService/2020-03-13/IndexParameters/index-content-schema-parameters.json
  - name: indexerSchemaFile
    value: Modules/ARM/SearchService/2020-03-13/IndexParameters/indexer-blob-pre-schema-parameters.json
  - name: dataSourceSchemaFile
    value: Modules/ARM/SearchService/2020-03-13/IndexParameters/ds-blob-pre-schema-paramaters.json
  - name: skillSetSchemaFile
    value: Modules/ARM/SearchService/2020-03-13/IndexParameters/ss-blob-pre-schema-paramaters.json
  - name: indexUrl
    value: https://srch-cpp-apps-cog-pre-we-01.search.windows.net/indexes/content-index?api-version=2020-06-30
  - name: indexerUrl
    value: https://srch-cpp-apps-cog-pre-we-01.search.windows.net/indexers/azureblob-indexer?api-version=2020-06-30
  - name: dataSourceUrl
    value: https://srch-cpp-apps-cog-pre-we-01.search.windows.net/datasources/azureblob?api-version=2020-06-30
  - name: skillSetUrl
    value: https://srch-cpp-apps-cog-pre-we-01.search.windows.net/skillsets/azureblob-skillset?api-version=2020-06-30

trigger: none

stages:
  - stage: Validate
    jobs:
      - job: ValidateTemplate
        displayName: Validate Template
        pool:
          name: $(PoolName)
        #   vmImage: $(vmImage)
        steps:
          - task: AzurePowerShell@4
            displayName: Validate template on $(resourceGroupName)
            inputs:
              azureSubscription: $(serviceConnection)
              ScriptType: InlineScript
              inline: |
                $ValidationErrors = $null

                $Location = "$(location)" -replace " ",""

                $DeploymentInputs = @{
                  Location              = "$Location"
                  TemplateFile          = "$(Build.Repository.LocalPath)/$(templateFilePath)"
                  # TemplateParameterFile = "$(Build.Repository.LocalPath)/$(parameterFilePath)"
                  Verbose               = $true
                  OutVariable           = "ValidationErrors"
                }

                Test-AzDeployment @DeploymentInputs

                if ($ValidationErrors)
                {
                  Write-Error "Template is not valid."
                }
              azurePowerShellVersion: LatestVersion

  - stage: DeployTemplate
    jobs:
      - job: DeployTemplate
        displayName: Deploy Template
        timeoutInMinutes: 90
        pool:
          name: $(PoolName)
        #   vmImage: $(vmImage)
        steps:
          - task: AzurePowerShell@4
            displayName: Deploy template on $(resourceGroupName)
            inputs:
              azureSubscription: $(serviceConnection)
              ScriptType: InlineScript
              inline: |
                $Location = "$(location)" -replace " ",""

                $DeploymentInputs = @{
                  Name                    = "$(resourceGroupName)-master"
                  Location                = "$Location"
                  TemplateFile            = "$(Build.Repository.LocalPath)/$(templateFilePath)"
                  # TemplateParameterFile  = "$(Build.Repository.LocalPath)/$(parameterFilePath)"
                  DeploymentDebugLogLevel = "All"
                  Verbose                 = $true
                  ErrorAction             = "Stop"
                }
                New-AzDeployment @DeploymentInputs
              azurePowerShellVersion: LatestVersion

          - task: AzurePowerShell@3
            displayName: Create Index in Search
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: '-searchServiceName "$(searchServicesName)" -resourceGroupName "$(resourceGroupName)" -schemaFile "$(Build.Repository.LocalPath)/$(indexSchemaFile)" -url "$(indexUrl)"'
              azurePowerShellVersion: LatestVersion

          - task: AzurePowerShell@3
            displayName: Link to blob datasource
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(datasourceScriptPath)"
              ScriptArguments: '-searchServiceName "$(searchServicesName)" -resourceGroupName "$(resourceGroupName)" -storageResourceGroup "$(storageResourceGroup)" -storageAccountName "$(storageAccountName)" -schemaFile "$(Build.Repository.LocalPath)/$(dataSourceSchemaFile)" -url "$(dataSourceUrl)"'
              azurePowerShellVersion: LatestVersion

          - task: AzurePowerShell@3
            displayName: Link to blob skillset
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: '-searchServiceName "$(searchServicesName)" -resourceGroupName "$(resourceGroupName)" -schemaFile "$(Build.Repository.LocalPath)/$(skillSetSchemaFile)" -url "$(skillSetUrl)"'
              azurePowerShellVersion: LatestVersion

          - task: AzurePowerShell@3
            displayName: Create Indexer in Search
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: '-searchServiceName "$(searchServicesName)" -resourceGroupName "$(resourceGroupName)" -schemaFile "$(Build.Repository.LocalPath)/$(indexerSchemaFile)" -url "$(indexerUrl)"'
              azurePowerShellVersion: LatestVersion
