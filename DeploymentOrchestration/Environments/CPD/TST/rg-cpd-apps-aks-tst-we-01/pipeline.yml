name: $(resourceGroupName)

variables:
  - name: PoolName
    value: "platformapispool"
  - name: templateFilePath
    value: DeploymentOrchestration/Environments/CPD/TST/rg-cpd-apps-aks-tst-we-01/deploy.json
  - name: parameterFilePath
    value:
  - name: location
    value: westeurope
  - name: resourceGroupName
    value: rg-cpd-apps-aks-tst-we-01
  - name: serviceConnection
    value: sqcp-ado-spn-dev
  - name: subscriptionId
    value: d0694def-b27e-4bb7-900d-437fbeb802da
  - name: clusterName
    value: aks-cpd-apps-tst-we-01
  - name: clusterManagedIdentity
    value: mi-cpd-apps-aks-tst-we-01
  - name: kubernetesVersion
    value: 1.23.5
  - name: privateDNSZoneResourceId
    value: /subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-pltf-net-dev-we-01/providers/Microsoft.Network/privateDnsZones/privatelink.westeurope.azmk8s.io
  - name: subnetResourceId
    value: /subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-pltf-net-tst-we-01/providers/Microsoft.Network/virtualNetworks/vnet-cpd-pltf-tst-we-01/subnets/snet-cpd-apps-aks-tst-we-01
  - name: nodeResourceGroup
    value: rg-cpd-apps-aksnode-tst-we-01
  - name: nodeCount
    value: 3
  - name: minCount
    value: 3
  - name: maxCount
    value: 10
  - name: maxPods
    value: 30
  - name: nodeVMSize
    value: Standard_D4s_v3
  - name: zones
    value: 1 2 3
  - name: aksServicePrincipal
    value: "98cc2e36-7380-4fca-bfd7-0246a0ebc96b"
  # - name: aksServicePrincipalSecret
  #   value: "added to pipeline variables"

trigger: none

stages:
  - stage: Validate
    jobs:
      - job: ValidateTemplate
        displayName: Validate Template
        pool:
          name: $(PoolName)
        steps:
          - task: AzurePowerShell@4
            displayName: Validate template on $(resourceGroupName)
            inputs:
              azureSubscription: $(serviceConnection)
              ScriptType: InlineScript
              inline: |
                $ValidationErrors = $null

                $Location = "$(location)" -replace " ",""

                $DeploymentInputs = @{
                  Location              = "$Location"
                  TemplateFile          = "$(Build.Repository.LocalPath)/$(templateFilePath)"
                  # TemplateParameterFile = "$(Build.Repository.LocalPath)/$(parameterFilePath)"
                  Verbose               = $true
                  OutVariable           = "ValidationErrors"
                }

                Test-AzDeployment @DeploymentInputs

                if ($ValidationErrors)
                {
                  Write-Error "Template is not valid."
                }
              azurePowerShellVersion: LatestVersion

  - stage: DeployManagedCluster
    jobs:
      - job: DeployManagedCluster
        displayName: Deploy Managed Cluster
        pool:
          name: $(PoolName)
        steps:
          - task: AzureCLI@2
            displayName: "Create Managed Cluster"
            inputs:
              azureSubscription: $(serviceConnection)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az extension add --name aks-preview --version 0.5.5
                az aks create -n $(clusterName) -g $(resourceGroupName) --location $(location) --kubernetes-version $(kubernetesVersion) --generate-ssh-keys --enable-private-cluster --network-plugin azure --network-policy azure --load-balancer-sku standard --dns-name-prefix $(clusterName)-dns --vnet-subnet-id $(subnetResourceId) --docker-bridge-address 172.17.0.1/16 --dns-service-ip 10.0.0.10 --service-cidr 10.0.0.0/16 --private-dns-zone $(privateDNSZoneResourceId) --node-resource-group $(nodeResourceGroup) --nodepool-name apps --enable-cluster-autoscaler --node-count $(nodeCount) --node-osdisk-size 0 --node-vm-size $(nodeVMSize) --zones $(zones) --node-osdisk-type Linux --max-pods $(maxPods) --max-count $(maxCount) --min-count $(minCount) --skip-subnet-role-assignment --service-principal $(aksServicePrincipal) --client-secret $(aksServicePrincipalSecret)

          - task: AzureCLI@2
            displayName: "Add Nodepool"
            inputs:
              azureSubscription: "$(serviceConnection)"
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                jobsPool=$(az aks nodepool show --cluster-name $(clusterName) --name jobs -g $(resourceGroupName) --query 'name' -o json)

                if [[ "$jobsPool" != '"jobs"' ]]

                then az aks nodepool add --cluster-name $(clusterName) --name jobs -g $(resourceGroupName) --enable-cluster-autoscaler --mode System --node-count $(nodeCount) --max-count $(maxCount) --min-count $(minCount) --max-pods $(maxPods) --node-osdisk-size 0 --node-vm-size $(nodeVMSize) --zones $(zones) --node-osdisk-type Linux

                else echo "jobs node pool already exists"

                fi

  - stage: DeployTemplate
    jobs:
      - job: DeployTemplate
        displayName: Deploy Template
        timeoutInMinutes: 90
        pool:
          name: $(PoolName)
        steps:
          - task: AzurePowerShell@4
            displayName: Deploy template on $(resourceGroupName)
            inputs:
              azureSubscription: $(serviceConnection)
              ScriptType: InlineScript
              inline: |
                $Location = "$(location)" -replace " ",""

                $DeploymentInputs = @{
                  Name                    = "$(resourceGroupName)-master"
                  Location                = "$Location"
                  TemplateFile            = "$(Build.Repository.LocalPath)/$(templateFilePath)"
                  # TemplateParameterFile  = "$(Build.Repository.LocalPath)/$(parameterFilePath)"
                  DeploymentDebugLogLevel = "All"
                  Verbose                 = $true
                  ErrorAction             = "Stop"
                }
                New-AzDeployment @DeploymentInputs
              azurePowerShellVersion: LatestVersion
