name: $(resourceGroupName)

variables:
  - name: PoolName
    value: "tasmumsagents"
  - name: templateFilePath
    value: DeploymentOrchestration/Environments/CPD/SBX/rg-cpd-apps-sbx-we-01/deploy.json
  - name: parameterFilePath
    value:
  - name: location
    value: westeurope
  - name: resourceGroupName
    value: rg-cpd-apps-sbx-we-01
  - name: serviceConnection
    value: sqcp-ado-spn-dev
  - name: subscriptionId
    value: d0694def-b27e-4bb7-900d-437fbeb802da
  - name: scriptPath
    value: Modules/ARM/B2C/2020-10-08/Scripts/deploy.custom.policies.ps1

trigger: none
#trigger:
#  batch: true
#  branches:
#    include:
#      - master
#  paths:
#    include:
#    - DeploymentOrchestration/TemplateBased/ARM/Contoso-private-hub/*

stages:
  - stage: Validate
    jobs:
      - job: ValidateTemplate
        displayName: Validate Template
        pool:
          name: $(PoolName)
        steps:
          - task: AzurePowerShell@4
            displayName: Validate template on $(resourceGroupName)
            inputs:
              azureSubscription: $(serviceConnection)
              ScriptType: InlineScript
              inline: |
                $ValidationErrors = $null

                $Location = "$(location)" -replace " ",""

                $DeploymentInputs = @{
                  Location              = "$Location"
                  TemplateFile          = "$(Build.Repository.LocalPath)/$(templateFilePath)"
                  # TemplateParameterFile = "$(Build.Repository.LocalPath)/$(parameterFilePath)"
                  Verbose               = $true
                  OutVariable           = "ValidationErrors"
                }

                Test-AzDeployment @DeploymentInputs

                if ($ValidationErrors)
                {
                  Write-Error "Template is not valid."
                }
              azurePowerShellVersion: LatestVersion

  - stage: DeployTemplate
    jobs:
      - job: DeployTemplate
        displayName: Deploy Template
        pool:
          name: $(PoolName)
        steps:
          - task: AzurePowerShell@4
            displayName: Deploy template on $(resourceGroupName)
            inputs:
              azureSubscription: $(serviceConnection)
              ScriptType: InlineScript
              inline: |
                $Location = "$(location)" -replace " ",""

                $DeploymentInputs = @{
                  Name                    = "$(resourceGroupName)-master"
                  Location                = "$Location"
                  TemplateFile            = "$(Build.Repository.LocalPath)/$(templateFilePath)"
                  # TemplateParameterFile  = "$(Build.Repository.LocalPath)/$(parameterFilePath)"
                  DeploymentDebugLogLevel = "All"
                  Verbose                 = $true
                  ErrorAction             = "Stop"
                }
                New-AzDeployment @DeploymentInputs
              azurePowerShellVersion: LatestVersion

          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            enabled: false
            displayName: "Replace tokens in **/*.xml"
            inputs:
              targetFiles: "**/*.xml"

          - task: PowerShell@2
            displayName: "Deploy B2C_1A_TrustFrameworkBase policy"
            enabled: false
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_TrustFrameworkBase -PathToFile $(System.DefaultWorkingDirectory)/policyRepo/Scripts/CustomPolicies/B2C_1A_TrustFrameworkBase.xml"
              azurePowerShellVersion: LatestVersion

          - task: PowerShell@2
            displayName: "Deploy B2C_1A_TrustFrameworkExtensions policy"
            enabled: false
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_TrustFrameworkExtensions -PathToFile $(System.DefaultWorkingDirectory)/policyRepo/Scripts/CustomPolicies/B2C_1A_TrustFrameworkExtensions.xml"
              azurePowerShellVersion: LatestVersion

          - task: PowerShell@2
            displayName: "Deploy B2C_1A_signup_signin policy"
            enabled: false
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_signup_signin -PathToFile $(System.DefaultWorkingDirectory)/policyRepo/Scripts/CustomPolicies/B2C_1A_signup_signin.xml"
              azurePowerShellVersion: LatestVersion

          - task: PowerShell@2
            displayName: "Deploy B2C_1A_ProfileEdit policy"
            enabled: false
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_ProfileEdit -PathToFile $(System.DefaultWorkingDirectory)/policyRepo/Scripts/CustomPolicies/B2C_1A_ProfileEdit.xml"
              azurePowerShellVersion: LatestVersion

          - task: PowerShell@2
            displayName: "Deploy B2C_1A_PasswordReset policy"
            enabled: false
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_PasswordReset -PathToFile $(System.DefaultWorkingDirectory)/policyRepo/Scripts/CustomPolicies/B2C_1A_PasswordReset.xml"
              azurePowerShellVersion: LatestVersion

          - task: PowerShell@2
            displayName: "Deploy B2C_1A_PasswordChange policy"
            enabled: false
            inputs:
              azureSubscription: "$(serviceConnection)"
              ScriptPath: "$(Build.Repository.LocalPath)/$(scriptPath)"
              ScriptArguments: "-ClientID $(clientId) -ClientSecret $(clientSecret) -TenantId $(tenantId) -PolicyId B2C_1A_PasswordChange -PathToFile $(System.DefaultWorkingDirectory)/policyRepo/Scripts/CustomPolicies/B2C_1A_PasswordChange.xml"
              azurePowerShellVersion: LatestVersion

  - stage: SecurityVerification
    jobs:
      - job: ScanResourceGroup
        displayName: Scan Resource Group
        pool:
          name: $(PoolName)
        steps:
          - task: AzSKSVTs@4
            displayName: Scan $(resourceGroupName)
            continueOnError: true
            inputs:
              ConnectedServiceNameARM: "$(serviceConnection)"
              GenerateMethodParameterSetSelection: "ResourceGroupName"
              ResourceGroupName: "$(resourceGroupName)"
              SubscriptionId: "$(subscriptionId)"
