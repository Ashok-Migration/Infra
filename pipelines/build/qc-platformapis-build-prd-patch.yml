trigger: none

pool:
  name: "tasmumsiprdagents"

variables:
  buildConfiguration: "Release"
  buildPlatform: "Any CPU"
jobs:
  - job: SonarPipeline
    displayName: Sonar Pipeline
    timeoutInMinutes: 120
    steps:
      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ESDevopsCIConfig.ServicesDevOpsBuildConfig@6
        displayName: ServicesDevOpsBuildConfig
        inputs:
          ServicesDevOpsServiceEndpoint: ServicesBuildEndPoint
          CASuppressionsEnabled: false
          ISGEnabled: false
          AIScannerEnabled: true
          emailto: "$(emailto)"

      - task: CredScan@2
        displayName: "Run CredScan"
        inputs:
          debugMode: false

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ServicesDevopsAddToSonarNSG.ServicesDevOpsSonarPreReq@5
        displayName: "T-ServicesDevOpsSonarPreReq:"

      - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
        displayName: "Prepare the SonarQube analysis"
        inputs:
          SonarQube: "ServiceSonar-CORP"
          projectKey: "TASMUCP_platform-apis_master"
          projectName: "TASMUCP_platform-apis_master_#MA"
          projectVersion: "$(Build.BuildNumber)"
          extraProperties: "sonar.ps.plugin.skip=true"

      - task: UseDotNet@2
        displayName: "Use .NET Core sdk 3.1.x"
        inputs:
          packageType: "sdk"
          version: "3.1.x"
          includePreviewVersions: true

      - task: DotNetCoreCLI@2
        displayName: "dotnet restore"
        inputs:
          command: "restore"
          projects: "$(solutionFiles)"
          vstsFeed: "d0902a05-fe88-4eb4-bab4-badafc58ebfa/f333d4e3-324a-45e6-9c13-ccc90b82eac4"

      - task: VSBuild@1
        inputs:
          solution: "$(solutionFiles)"
          vsVersion: "16.0"
          msbuildArgs: '/p:OutputPath="$(Build.BinariesDirectory)\$(buildConfiguration)/" /p:OutDir="$(Build.BinariesDirectory)\$(buildConfiguration)\\" /p:ReferencesLogFolder=$(Agent.BuildDirectory) /p:GenerateProjectSpecificOutputFolder=true /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.BinariesDirectory)\$(buildConfiguration)\\"'
          platform: "$(buildPlatform)"
          configuration: "$(buildConfiguration)"

      - task: DotNetCoreCLI@2
        displayName: Test
        inputs:
          command: test
          projects: "**/*[Tt]est*/**/*.csproj"
          arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "Code Coverage"'
          continueOnError: true

      - task: DotNetCoreCLI@2
        displayName: "dotnet publish"
        inputs:
          command: publish
          arguments: "--output $(Build.ArtifactStagingDirectory) --configuration $(BuildConfiguration)"

      - task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@4
        displayName: "Complete the SonarQube analysis"

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ServicesDevopsRemoveFromNSG.ServicesDevOpsSonarPreReqComplete@5
        displayName: "T-ServicesDevOpsSonarPreReqComplete:"

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ESDevopsValidateCIConfig.ServicesDevOpsValidateBuildConfig@5
        displayName: ServicesDevOpsValidateBuildConfig
        condition: always()

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ESDevopsDownloadTools_AzureBlob.ServicesDevOpsToolDownload@5
        displayName: ServicesDevOpsToolDownload

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ESDevopsStyleCop.ServicesDevOpsStyleCop@5
        displayName: "T-StyleCop:"
        inputs:
          SolutionFiles: "$(solutionFiles)"

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ESDevopsJSLintNet.ServicesDevOpsJSLintNet@5
        displayName: "T-JSLintNet:"
        inputs:
          Source: "$(Build.SourcesDirectory)"

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ESDevopsComponentGovernance.ServicesDevOpsComponentGovernance@5
        displayName: ServicesDevOpsComponentGovernance
        enabled: false

      - task: EnterpriseServicesDevOpsTeam.BuildTool-Tasks.task-ESDevopsCopyReports.ServicesDevOpsCopyReports@5
        displayName: ServicesDevOpsCopyReports

      - task: WhiteSource Bolt@20
        displayName: "Run WhiteSource Bolt"
        inputs:
          cwd: "$(System.DefaultWorkingDirectory)"

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: BuildLogFolder"
        inputs:
          PathtoPublish: '$(Agent.BuildDirectory)\BuildLogFolder'
          ArtifactName: BuildLogFolder
        condition: always()
