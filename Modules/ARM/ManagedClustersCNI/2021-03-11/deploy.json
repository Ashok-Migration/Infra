{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "acrName": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of the Azure Container Registry."
            }
        },
        "acrResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the container registry is associated with."
            }
        },
        "acrRoleGuidValue": {
            "type": "string",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use a unique value."
            },
            "defaultValue": "[newGuid()]"
        },
        "agentCount": {
            "defaultValue": 4,
            "minValue": 1,
            "maxValue": 50,
            "type": "int",
            "metadata": {
                "description": "The number of agent nodes for the cluster. Production workloads have a recommended minimum of 3."
            }
        },
        "agentVMSize": {
            "defaultValue": "Standard_DS2_v2",
            "type": "string",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "clusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "enableHttpApplicationRouting": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off http application routing."
            }
        },
        "enableOmsAgent": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off omsagent addon."
            }
        },
        "enablePrivateCluster": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable private network access to the Kubernetes cluster."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of RBAC."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.18.10",
            "metadata": {
                "description": "The version of Kubernetes."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "maxPods": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Maximum number of pods that can run on a node."
            }
        },
        "micGuidValue": {
            "type": "string",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the node resource group. It is recommended to use a unique value.."
            },
            "defaultValue": "[newGuid()]"
        },
        "networkPlugin": {
            "type": "string",
            "allowedValues": [
                "azure",
                "kubenet"
            ],
            "metadata": {
                "description": "Network plugin used for building Kubernetes network."
            }
        },
        "networkPolicy": {
            "type": "string",
            "metadata": {
                "description": "Network policy used for building Kubernetes network."
            }
        },
        "nodeResourceGroup": {
            "type": "string"
        },
        "omsRoleGuidValue": {
            "type": "string",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the subent. It is recommended to use a unique value.."
            },
            "defaultValue": "[newGuid()]"
        },
        "omsSku": {
            "type": "string",
            "defaultValue": "standalone",
            "allowedValues": [
                "free",
                "standalone",
                "pernode"
            ],
            "metadata": {
                "description": "Select the SKU for your workspace."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "osType": {
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux"
            ],
            "type": "string",
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "serviceCidr": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "subnetName": {
            "type": "string"
        },
        "subnetRoleGuidValue": {
            "type": "string",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the subent. It is recommended to use a unique value."
            },
            "defaultValue": "[newGuid()]"
        },
        "tags": {
            "defaultValue": {},
            "metadata": {
                "description": "Optional. Resource tags."
            },
            "type": "object"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vnet-cpd-pltf-dev-we-01"
        },
        "vmcGuidValue": {
            "type": "string",
            "metadata": {
                "description": "The unique id used in the role assignment of the kubernetes service to the node resource group. It is recommended to use a unique value"
            },
            "defaultValue": "[newGuid()]"
        },
        "vmssNodePool": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Boolean flag to turn on and off of VM scale sets"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "defaultValue": "rg-cpd-pltf-net-dev-we-01"
        },
        "windowsProfile": {
            "type": "bool",
            "defaultValue": false
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of the OMS workspace."
            }
        },
        "zones": {
            "type": "array",
            "defaultValue": []
        },
        "enableAutoScaling": {
            "type": "bool",
            "defaultValue": true
        },
        "agentPoolMaxCount": {
            "type": "int",
            "defaultValue": 6
        },
        "agentPoolMinCount": {
            "type": "int",
            "defaultValue": 4
        },
        "diagnosticLogsRetentionInDays": {
            "type": "int",
            "defaultValue": 365,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
            }
        },
        "diagnosticStorageAccountId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource identifier of the Diagnostic Storage Account."
            }
        },
        "eventHubAuthorizationRuleId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
            }
        },
        "eventHubName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Name of the event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
            }
        },
        "agentPoolProfiles": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "agentpool",
                    "osDiskSizeGB": 0,
                    "count": 4,
                    "vmSize": "Standard_DS2_v2",
                    "osType": "Linux",
                    "storageProfile": "ManagedDisks",
                    "type": "VirtualMachineScaleSets",
                    "maxCount": 6,
                    "minCount": 4,
                    "mode": "System",
                    "maxPods": 30,
                    "enableAutoScaling": true,
                    "vnetSubnetID": "[json('null')]",
                    "availabilityZones": "[json('null')]"
                }
            ]
        }
    },
    "variables": {
        "vnetSubnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'),parameters('subnetName'))]",
        "subscriptionId": "[subscription().subscriptionId]",
        "diagnosticsLogs": [
            {
                "category": "kube-apiserver",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            },
            {
                "category": "kube-audit",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            },
            {
                "category": "kube-audit-admin",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            },
            {
                "category": "kube-controller-manager",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            },
            {
                "category": "kube-scheduler",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            },
            {
                "category": "cluster-autoscaler",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            },
            {
                "category": "guard",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            }
        ],
        "diagnosticsMetrics": [
            {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2020-09-01",
            "dependsOn": [],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('clusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "nodeResourceGroup": "[parameters('nodeResourceGroup')]",
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": "[parameters('agentPoolProfiles')]",
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[parameters('networkPlugin')]",
                    "networkPolicy": "[parameters('networkPolicy')]",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": "[parameters('enableHttpApplicationRouting')]"
                    },
                    "omsagent": {
                        "enabled": "[parameters('enableOmsAgent')]",
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[parameters('workspaceId')]"
                        }
                    }
                }
            },
            "resources": [
                {
                    "type": "Microsoft.ContainerService/managedClusters/providers/diagnosticsettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat(parameters('clusterName'), '/Microsoft.Insights/service')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
                    ],
                    "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))),not(empty(parameters('eventHubAuthorizationRuleId'))),not(empty(parameters('eventHubName'))))]",
                    "properties": {
                        "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
                        "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
                        "eventHubAuthorizationRuleId": "[if(empty(parameters('eventHubAuthorizationRuleId')), json('null'), parameters('eventHubAuthorizationRuleId'))]",
                        "eventHubName": "[if(empty(parameters('eventHubName')), json('null'), parameters('eventHubName'))]",
                        "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsMetrics'))]",
                        "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsLogs'))]"
                    }
                }
            ],
            "tags": "[parameters('tags')]",
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('DEP-', parameters('clusterName'), '-Solution')]",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[if(empty(parameters('workspaceId')),resourceGroup().id,split(parameters('workspaceId'),'/')[4] )]",
            "subscriptionId": "[variables('subscriptionId')]",
            "condition": "[not(empty(parameters('workspaceId')))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "apiVersion": "2015-11-01-preview",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "location": "[parameters('location')]",
                            "name": "[concat('ContainerInsights', '(', split(parameters('workspaceId'),'/')[8], ')')]",
                            "properties": {
                                "workspaceResourceId": "[parameters('workspaceId')]"
                            },
                            "plan": {
                                "name": "[concat('ContainerInsights', '(', split(parameters('workspaceId'),'/')[8], ')')]",
                                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            },
                            "tags": "[parameters('tags')]"
                        }
                    ]
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat('DEP-', parameters('clusterName'), '-AKStoACR')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('acrResourceGroup')]",
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
            ],
            "condition": "[not(empty(parameters('acrName')))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2018-09-01-preview",
                            "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
                            "name": "[concat(parameters('acrName'), '/Microsoft.Authorization/', parameters('acrRoleGuidValue'))]",
                            "properties": {
                                "principalId": "[reference(parameters('clusterName'), '2020-03-01').identityProfile.kubeletidentity.objectId]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                                "roleDefinitionName": "AcrPull",
                                "scope": "[resourceId(parameters('acrResourceGroup'),'Microsoft.ContainerRegistry/registries/', parameters('acrName'))]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat('DEP-', parameters('clusterName'), '-micagentpoolToNodeRG')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('nodeResourceGroup')]",
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2018-09-01-preview",
                            "type": "Microsoft.Authorization/roleAssignments",
                            "name": "[parameters('micGuidValue')]",
                            "properties": {
                                "principalId": "[reference(parameters('clusterName'), '2020-03-01').identityProfile.kubeletidentity.objectId]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'e40ec5ca-96e0-45a2-b4ff-59039f2c2b59')]",
                                "roleDefinitionName": "Managed Identity Contributor",
                                "scope": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', parameters('nodeResourceGroup'))]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat('DEP-', parameters('clusterName'), '-vmcagentpoolToNodeRG')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('nodeResourceGroup')]",
            "dependsOn": [
                "[concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "2018-09-01-preview",
                            "type": "Microsoft.Authorization/roleAssignments",
                            "name": "[parameters('vmcGuidValue')]",
                            "properties": {
                                "principalId": "[reference(parameters('clusterName'), '2020-03-01').identityProfile.kubeletidentity.objectId]",
                                "principalType": "ServicePrincipal",
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
                                "roleDefinitionName": "Virtual Machine Contributor",
                                "scope": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', parameters('nodeResourceGroup'))]"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('DEP-', parameters('clusterName'), '-ClusterMonitoring')]",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.ContainerService/managedClusters/providers/roleAssignments",
                            "apiVersion": "2018-01-01-preview",
                            "name": "[concat(parameters('clusterName'), '/Microsoft.Authorization/', parameters('omsRoleGuidValue'))]",
                            "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                                "principalId": "[reference(parameters('clusterName')).addonProfiles.omsagent.identity.objectId]",
                                "scope": "[resourceId(resourceGroup().name,'Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('DEP-', parameters('clusterName'), '-ClusterSubnetRoleAssignmentDeployment')]",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('vnetResourceGroup')]",
            "condition": "[not(empty(parameters('virtualNetworkName')))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                            "apiVersion": "2017-05-01",
                            "name": "[concat(parameters('virtualNetworkName'),'/',parameters('subNetName'),'/Microsoft.Authorization/', parameters('subnetRoleGuidValue'))]",
                            "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                                "principalId": "[reference(parameters('clusterName')).identityProfile.kubeletidentity.objectId]",
                                "scope": "[variables('vnetSubnetID')]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": []
        }
    ],
    "outputs": {},
    "functions": []
}