{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "maxLength": 24,
            "metadata": {
                "description": "Required. Name of the Storage Account."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "storageAccountKind": {
            "type": "string",
            "defaultValue": "StorageV2",
            "allowedValues": [
                "Storage",
                "StorageV2",
                "BlobStorage",
                "FileStorage",
                "BlockBlobStorage"
            ],
            "metadata": {
                "description": "Optional. Type of Storage Account to create."
            }
        },
        "storageAccountSku": {
            "type": "string",
            "defaultValue": "Standard_GRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ],
            "metadata": {
                "description": "Optional. Storage Account Sku Name."
            }
        },
        "storageAccountAccessTier": {
            "type": "string",
            "defaultValue": "Hot",
            "allowedValues": [
                "Hot",
                "Cool"
            ],
            "metadata": {
                "description": "Optional. Storage Account Access Tier."
            }
        },
        "blobContainers": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "Optional. Blob containers to create."
            }
        },
        "utcYear": {
            "type": "string",
            "defaultValue": "[utcNow('yyyy')]",
            "metadata": {
                "description": "Optional. Year data used to generate a SAS token. Default is the current year."
            }
        },
        "lockForDeletion": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Optional. Switch to lock storage from deletion."
            }
        },
        "networkAclsBypass": {
          "type": "string",
          "allowedValues": [
            "None",
            "Logging",
            "Metrics",
            "AzureServices"
          ],
          "metadata": {
                "description": "Optional. Specifies whether traffic is bypassed for Logging/Metrics/AzureServices."
            }
        },
        "networkAclsDefaultAction": {
          "type": "string",
          "allowedValues": [
            "Allow",
            "Deny"
          ],
          "defaultValue" :  "Deny",
          "metadata": {
                "description": "Optional. Specifies the default action of allow or deny when no other rules match. "
            }
        },
        "networkAclsVirtualNetworkRules": {
          "type": "array",
          "defaultValue": [],
          "metadata": {
                "description": "Optional. Sets the virtual network rules, like resource ID of a subnet. "
            }
        },
        "networkAclsIpRules": {
          "type": "array",
          "defaultValue": [],
          "metadata": {
                "description": "Optional. Sets the IP rules. "
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Optional. Tags of the Storage Account resource."
            }
        },
        "supportsHttpsTrafficOnly": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Optional. Allows https traffic only to storage service if sets to true. Default is true."
            }
        },
      "isHnsEnabled": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Required true for Datalake Gen2."
        }
      }
    },
    "variables": {
        "cleanStorageAccountName": "[replace(tolower(parameters('storageAccountName')), '-', '')]",
        "accountSasProperties": {
            "signedServices": "bt",
            "signedPermission": "racuw",
            "signedExpiry": "[concat(string(add(int(parameters('utcYear')), 100)), '-12-31T23:59:59Z')]",
            "signedResourceTypes": "co",
            "signedProtocol": "https"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('cleanStorageAccountName')]",
            "apiVersion": "2019-04-01",
            "location": "[parameters('location')]",
            "kind": "[parameters('storageAccountKind')]",
            "sku": {
                "name": "[parameters('storageAccountSku')]"
            },
            "tags": "[parameters('tags')]",
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": "[if(or(equals(parameters('storageAccountKind'), 'BlockBlobStorage'), equals(parameters('storageAccountKind'), 'BlobStorage'), equals(parameters('storageAccountKind'), 'StorageV2'), equals(parameters('storageAccountKind'), 'Storage')), json('{\"enabled\": true}'), json('null'))]",
                        "file": "[if(or(equals(parameters('storageAccountKind'), 'FileStorage'), equals(parameters('storageAccountKind'), 'StorageV2'), equals(parameters('storageAccountKind'), 'Storage')), json('{\"enabled\": true}'), json('null'))]"
                    }
                },
                "accessTier": "[parameters('storageAccountAccessTier')]",
                "supportsHttpsTrafficOnly": "[parameters('supportsHttpsTrafficOnly')]",
                "isHnsEnabled": "[parameters('isHnsEnabled')]",
                "networkAcls": {
                    "bypass": "[if(empty(parameters('networkAclsBypass')), json('null'), parameters('networkAclsBypass'))]",
                    "defaultAction": "[if(empty(parameters('networkAclsDefaultAction')), json('null'), parameters('networkAclsDefaultAction'))]",
                    "ipRules": "[if(empty(parameters('networkAclsIpRules')), json('null'), parameters('networkAclsIpRules'))]",
                    "virtualNetworkRules": "[if(empty(parameters('networkAclsVirtualNetworkRules')), json('null'), parameters('networkAclsVirtualNetworkRules'))]"
                }
            },
            "resources": [
                {
                    "type": "providers/locks",
                    "apiVersion": "2016-09-01",
                    "condition": "[parameters('lockForDeletion')]",
                    "name": "Microsoft.Authorization/storageDoNotDelete",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts/', variables('cleanStorageAccountName'))]"
                    ],
                    "comments": "Resource lock on the Storage Account",
                    "properties": {
                        "level": "CannotDelete"
                    }
                }
            ]
        },
        {
            "name": "[if(empty(parameters('blobContainers')), concat(variables('cleanStorageAccountName'), '/', 'default/dummy'), concat(variables('cleanStorageAccountName'), '/default/', parameters('blobContainers')[copyIndex('blobContainersLoop')].name))]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2018-03-01-preview",
            "condition": "[not(empty(parameters('blobContainers')))]",
            "copy": {
                "name": "blobContainersLoop",
                "count": "[if(empty(parameters('blobContainers')) , 1, length(parameters('blobContainers')))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('cleanStorageAccountName'))]"
            ]
        }
    ],
  "functions": [],
    "outputs": {
        "storageAccountResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('cleanStorageAccountName'))]",
            "metadata": {
                "description": "The Resource Id of the Storage Account."
            }
        },
        "storageAccountRegion": {
            "type": "string",
            "value": "[parameters('location')]",
            "metadata": {
                "description": "The Region of the Storage Account."
            }
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('cleanStorageAccountName')]",
            "metadata": {
                "description": "The Name of the Storage Account."
            }
        },
        "storageAccountResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the Resource Group the Storage Account was created in."
            }
        },
        "storageAccountSasToken": {
            "type": "securestring",
            "value": "[listAccountSas(variables('cleanStorageAccountName'), '2019-04-01', variables('accountSasProperties')).accountSasToken]",
            "metadata": {
                "description": "The SAS Token for the Storage Account."
            }
        },
        "storageAccountAccessKey": {
            "type": "securestring",
            "value": "[listKeys(variables('cleanStorageAccountName'), '2016-12-01').keys[0].value]",
            "metadata": {
                "description": "The Access Key for the Storage Account."
            }
        },
        "storageAccountPrimaryBlobEndpoint": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('cleanStorageAccountName')), '2019-04-01').primaryEndpoints.blob]",
            "metadata": {
                "description": "The public endpoint of the Storage Account."
            }
        }
    }
}