{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01//deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "azureFirewallName": {
            "type": "string",
            "metadata": {
                "description": "Required. Name of the Azure Firewall."
            }
        },
        "applicationRuleCollections": {
            "type": "array",
            "metadata": {
                "description": "Required. Collection of application rule collections used by Azure Firewall."
            }
        },
        "networkRuleCollections": {
            "type": "array",
            "metadata": {
                "description": "Required. Collection of network rule collections used by Azure Firewall."
            }
        },
        "vNetId": {
            "type": "string",
            "metadata": {
                "description": "Required. Shared services Virtual Network resource Id"
            }
        },
        "diagnosticStorageAccountId": {
            "type": "string",
            "metadata": {
                "description": "Optional. Diagnostic Storage Account resource identifier"
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "Optional. Log Analytics workspace resource identifier"
            }
        },
        "diagnosticLogsRetentionInDays": {
            "type": "int",
            "defaultValue": 365,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
            }
        },
        "eventHubAuthorizationRuleId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
            }
        },
        "eventHubName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Name of the event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Optional. Tags of the Automation Account resource."
            }
        }
    },
    "variables": {
        "azureFirewallSubnetId": "[concat(parameters('vNetId'), '/subnets/AzureFirewallSubnet')]",
        "azureFirewallPipName": "[concat(parameters('azureFirewallName'), '-pip')]",
        "azureFirewallPipId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('azureFirewallPipName'))]",
        "diagnosticsMetrics": [
            {
                "category": "AllMetrics",
                "timeGrain": null,
                "enabled": false,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            }
        ],
        "diagnosticsLogsAzureFirewall": [
            {
                "category": "AzureFirewallApplicationRule",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            },
            {
                "category": "AzureFirewallNetworkRule",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            }
        ],
        "diagnosticsLogsPublicIp": [
            {
                "category": "DDoSProtectionNotifications",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            },
            {
                "category": "DDoSMitigationFlowLogs",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            },
            {
                "category": "DDoSMitigationReports",
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            }
        ]
    },
    "resources": [
        {
            "name": "[variables('azureFirewallPipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "location": "[parameters('location')]",
            "name": "[concat(variables('azureFirewallPipName'), '/Microsoft.Insights/service')]",
            "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))),not(empty(parameters('eventHubAuthorizationRuleId'))),not(empty(parameters('eventHubName'))))]",
            "dependsOn": [
                "[variables('azureFirewallPipName')]"
            ],
            "properties": {
                "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
                "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
                "eventHubAuthorizationRuleId": "[if(empty(parameters('eventHubAuthorizationRuleId')), json('null'), parameters('eventHubAuthorizationRuleId'))]",
                "eventHubName": "[if(empty(parameters('eventHubName')), json('null'), parameters('eventHubName'))]",
                "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsMetrics'))]",
                "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsLogsPublicIp'))]"
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Network/azureFirewalls",
            "name": "[parameters('azureFirewallName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('azureFirewallPipName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "threatIntelMode": "Deny",
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[variables('azureFirewallSubnetId')]"
                            },
                            "publicIPAddress": {
                                "id": "[variables('azureFirewallPipId')]"
                            }
                        }
                    }
                ],
                "applicationRuleCollections": "[parameters('applicationRuleCollections')]",
                "networkRuleCollections": "[parameters('networkRuleCollections')]"
            },
            "resources": [
                {
                    "type": "Microsoft.Network/azureFirewalls/providers/diagnosticsettings",
                    "name": "[concat(parameters('azureFirewallName'), '/Microsoft.Insights/service')]",
                    "apiVersion": "2016-09-01",
                    "location": "[resourceGroup().location]",
                    "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))),not(empty(parameters('eventHubAuthorizationRuleId'))),not(empty(parameters('eventHubName'))))]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/azureFirewalls/', parameters('azureFirewallName'))]"
                    ],
                    "properties": {
                        "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
                        "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
                        "eventHubAuthorizationRuleId": "[if(empty(parameters('eventHubAuthorizationRuleId')), json('null'), parameters('eventHubAuthorizationRuleId'))]",
                        "eventHubName": "[if(empty(parameters('eventHubName')), json('null'), parameters('eventHubName'))]",
                        "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsMetrics'))]",
                        "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsLogsAzureFirewall'))]"
                    }
                }
            ]
        }
    ],
    "outputs": {
        "azureFirewallResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewallName'))]",
            "metadata": {
                "description": "The Resource Id of the Azure Firewall."
            }
        },
        "azureFirewallName": {
            "type": "string",
            "value": "[parameters('azureFirewallName')]",
            "metadata": {
                "description": "The Name of the Azure Firewall."
            }
        },
        "azureFirewallResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the Resource Group the Azure Firewall was created in."
            }
        },
        "azureFirewallPrivateIp": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewallName'))).ipConfigurations[0].properties.privateIPAddress]",
            "metadata": {
                "description": "The private IP of the Azure Firewall."
            }
        },
        "azureFirewallPublicIp": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('azureFirewallPipName'))).ipAddress]",
            "metadata": {
                "description": "The public IP of the Azure Firewall."
            }
        },
        "applicationRuleCollections": {
            "type": "array",
            "value": "[parameters('applicationRuleCollections')]",
            "metadata": {
                "description": "List of Application Rule Collections."
            }
        },
        "networkRuleCollections": {
            "type": "array",
            "value": "[parameters('networkRuleCollections')]",
            "metadata": {
                "description": "List of Network Rule Collections."
            }
        }
    }
}