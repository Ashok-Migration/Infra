{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "metadata": {
        "description": "The name of the api management service"
      },
      "type": "string"
    },
    "appInsightsId": {
      "type": "string"
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      },
      "type": "string"
    },
    "publisherEmail": {
      "metadata": {
        "description": "The email address of the owner of the service"
      },
      "minLength": 1,
      "type": "string"
    },
    "publisherName": {
      "metadata": {
        "description": "The name of the owner of the service"
      },
      "minLength": 1,
      "type": "string"
    },
    "sku": {
      "allowedValues": [
        "Basic",
        "Consumption",
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      },
      "type": "string"
    },
    "skuCount": {
      "defaultValue": 1,
      "metadata": {
        "description": "The instance size of this API Management service."
      },
      "type": "int"
    },
    "subnetName": {
      "type": "string"
    },
    "tags": {
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Resource tags."
      },
      "type": "object"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "virtualNetworkType": {
      "defaultValue": "Internal",
      "metadata": {
        "description": "The virtual network type"
      },
      "type": "string"
    },
    "vnetResourceGroup": {
      "type": "string"
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 365,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of the Diagnostic Storage Account."
      }
    },
    "workspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of Log Analytics."
      }
    },
    "eventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "lockForDeletion": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Switch to lock Key Vault from deletion."
      }
    }
  },
  "variables": {
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "vnetId": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "diagnosticsMetrics": [
      {
        "category": "Gateway Requests",
        "enabled": true,
        "retentionPolicy": {
          "days": "[parameters('diagnosticLogsRetentionInDays')]",
          "enabled": true
        }
      },
      {
        "category": "Capacity",
        "enabled": true,
        "retentionPolicy": {
          "days": "[parameters('diagnosticLogsRetentionInDays')]",
          "enabled": true
        }
      },
      {
        "category": "EventHub Events",
        "enabled": true,
        "retentionPolicy": {
          "days": "[parameters('diagnosticLogsRetentionInDays')]",
          "enabled": true
        }
      }
    ],
    "diagnosticsLogs": [
      {
        "category": "GatewayLogs",
        "enabled": true,
        "retentionPolicy": {
          "days": "[parameters('diagnosticLogsRetentionInDays')]",
          "enabled": true
        }
      }
    ]
  },
  "resources": [
    {
      "apiVersion": "2019-12-01",
      "name": "[parameters('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]",
        "virtualNetworkType": "[parameters('virtualNetworkType')]",
        "virtualNetworkConfiguration": "[if(equals(parameters('virtualNetworkType'),'Internal'), json(concat('{\"subnetResourceId\": \"', variables('subnetRef'), '\"}')), json('null'))]"
      },
      "resources": [
        {
          "apiVersion": "2019-01-01",
          "type": "loggers",
          "name": "[concat('appi-',parameters('apiManagementServiceName'))]",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'))]"
          ],
          "properties": {
            "loggerType": "applicationInsights",
            "resourceId": "[parameters('appInsightsId')]",
            "credentials": {
              "instrumentationKey": "[reference(parameters('appInsightsId'), '2015-05-01').InstrumentationKey]"
            }
          }
        },
        {
          "apiVersion": "2019-01-01",
          "type": "diagnostics",
          "name": "applicationinsights",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'))]",
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/loggers/', 'appi-',parameters('apiManagementServiceName'))]"
          ],
          "properties": {
            "loggerId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/loggers/', 'appi-',parameters('apiManagementServiceName'))]",
            "alwaysLog": "allErrors",
            "sampling": {
              "percentage": 100,
              "samplingType": "fixed"
            }
          }
        },
        {
          "type": "providers/locks",
          "apiVersion": "2016-09-01",
          "condition": "[parameters('lockForDeletion')]",
          "name": "Microsoft.Authorization/analysisServicesDoNotDelete",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'))]"
          ],
          "comments": "Resource lock",
          "properties": {
            "level": "CannotDelete"
          }
        },
        {
          "type": "Microsoft.ApiManagement/service/providers/diagnosticsettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat(parameters('apiManagementServiceName'), '/Microsoft.Insights/service')]",
          "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))),not(empty(parameters('eventHubAuthorizationRuleId'))),not(empty(parameters('eventHubName'))))]",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'))]"
          ],
          "properties": {
            "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
            "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
            "eventHubAuthorizationRuleId": "[if(empty(parameters('eventHubAuthorizationRuleId')), json('null'), parameters('eventHubAuthorizationRuleId'))]",
            "eventHubName": "[if(empty(parameters('eventHubName')), json('null'), parameters('eventHubName'))]",
            "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsMetrics'))]",
            "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsLogs'))]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-12-01",
      "name": "[concat(parameters('apiManagementServiceName'), '/echo-api')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementServiceName'))]"
      ],
      "properties": {
        "displayName": "Echo API",
        "apiRevision": "1",
        "subscriptionRequired": true,
        "serviceUrl": "",
        "path": "echo",
        "protocols": [
          "https"
        ],
        "isCurrent": true
      },
      "identity": {
        "type": "SystemAssigned"
      }
    }
  ],
  "functions": [],
  "outputs": {}
}