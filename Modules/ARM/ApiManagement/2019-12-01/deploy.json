{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "metadata": {
        "description": "The name of the api management service"
      },
      "type": "string"
    },
    "appInsightsName": {
      "type": "string"
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      },
      "type": "string"
    },
    "publisherEmail": {
      "metadata": {
        "description": "The email address of the owner of the service"
      },
      "minLength": 1,
      "type": "string"
    },
    "publisherName": {
      "metadata": {
        "description": "The name of the owner of the service"
      },
      "minLength": 1,
      "type": "string"
    },
    "sku": {
      "allowedValues": [
        "Basic",
        "Consumption",
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      },
      "type": "string"
    },
    "skuCount": {
      "defaultValue": 1,
      "metadata": {
        "description": "The instance size of this API Management service."
      },
      "type": "int"
    },
    "subnetName": {
      "type": "string"
    },
    "tags": {
      "defaultValue": {
      },
      "metadata": {
        "description": "Optional. Resource tags."
      },
      "type": "object"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "virtualNetworkType": {
      "allowedValues": [
        "External",
        "Internal",
        "None"
      ],
      "defaultValue": "None",
      "metadata": {
        "description": "The virtual network type"
      },
      "type": "string"
    },
    "vnetResourceGroup": {
      "type": "string"
    }
  },
  "variables": {
    "appInsightsId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Insights/components/', parameters('appInsightsName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "vnetId": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
  },
  "resources": [
    {
      "apiVersion": "2019-12-01",
      "name": "[parameters('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": "[parameters('skuCount')]"
      },
      "properties": {
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('publisherName')]",
        "virtualNetworkType": "[parameters('virtualNetworkType')]",
        "virtualNetworkConfiguration": "[if(equals(parameters('virtualNetworkType'),'Internal'), json(concat('{\"subnetResourceId\": \"', variables('subnetRef'), '\"}')), json('null'))]"
      },
      "resources": [
        {
          "apiVersion": "2019-01-01",
          "type": "loggers",
          "name": "[parameters('appInsightsName')]",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'))]"
          ],
          "properties": {
            "loggerType": "applicationInsights",
            "resourceId": "[variables('appInsightsId')]",
            "credentials": {
              "instrumentationKey": "[reference(variables('appInsightsId'), '2015-05-01').InstrumentationKey]"
            }
          }
        },
        {
          "apiVersion": "2019-01-01",
          "type": "diagnostics",
          "name": "applicationinsights",
          "dependsOn": [
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'))]",
            "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/loggers/', parameters('appInsightsName'))]"
          ],
          "properties": {
            "loggerId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/loggers/', parameters('appInsightsName'))]",
            "alwaysLog": "allErrors",
            "sampling": {
              "percentage": 100,
              "samplingType": "fixed"
            }
          }
        }
      ]
    }
  ],
  "functions": [],
  "outputs": {
  }
}