{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "metadata": {
        "description": "The name of the api management service"
      },
      "type": "string"
    },
    "apiName": {
      "metadata": {
        "description": "The name of the API being added"
      },
      "type": "string"
    },
    "apiDisplayName": {
      "metadata": {
        "description": "The display name of the API being added"
      },
      "type": "string"
    },
    "apiDescription": {
      "metadata": {
        "description": "The description of the API being added"
      },
      "type": "string"
    },
    "apiPath": {
      "metadata": {
        "description": "The path of the API being added"
      },
      "type": "string"
    },
    "subscriptionRequired": {
      "defaultValue": true,
      "metadata": {
        "description": "Specifies whether an API or Product subscription is required for accessing the API."
      },
      "type": "bool"
    },
    "apiPolicyFunctionAppName": {
      "defaultValue": "",
      "metadata": {
        "description": "The name of the function app in the backend."
      },
      "type": "string"
    },
    "apiPolicyFunctionAppRG": {
      "defaultValue": "",
      "metadata": {
        "description": "The RG of the logic app in the backend."
      },
      "type": "string"
    },
    "apiOperations": {
      "type": "array",
      "metadata": {
        "description": "A list of operations on the API."
      }
    }
  },
  "variables": {
    "basePolicy0": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"<NAMEOFFUNCTIONAPPBACKEND>\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
    "basePolicy1": "[replace(variables('basePolicy0'),'<NAMEOFFUNCTIONAPPBACKEND>',parameters('apiPolicyFunctionAppName'))]",
    "policy": "[variables('basePolicy1')]"
 },
  "resources": [
    {
      "name": "[concat(parameters('apiManagementServiceName'),'/',parameters('apiName'))]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "properties": {
        "description": "[parameters('apiDescription')]",
        "path": "[parameters('apiPath')]",
        "type": "http",
        "subscriptionRequired": "[parameters('subscriptionRequired')]",
        "displayName": "[parameters('apiDisplayName')]",
        "protocols": [
          "http",
          "https"
        ]
      },
      "resources": [
        {
          "name": "[concat(parameters('apiManagementServiceName'),'/',parameters('apiName'),'/policy')]",
          "type": "Microsoft.ApiManagement/service/apis/policies",
          "apiVersion": "2019-01-01",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), parameters('apiName'))]"
          ],
          "condition": "[and(not(empty(parameters('apiPolicyFunctionAppName'))),not(empty(parameters('apiPolicyFunctionAppRG'))))]",
          "properties": {
            "value": "[variables('policy')]",
            "format": "xml"
          }
        }
      ]
    },
    {
      "name": "[concat(parameters('apiManagementServiceName'),'/',parameters('apiName'),'/',parameters('apiOperations')[copyIndex('operationscopy')].operationName)]",
      "copy": {
        "name": "operationscopy",
        "count": "[length(parameters('apiOperations'))]",
        "mode": "Serial"
      },
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementServiceName'), parameters('apiName'))]"
      ],
      "properties": {
        "description": "[parameters('apiOperations')[copyIndex('operationscopy')].description]",
        "displayName": "[parameters('apiOperations')[copyIndex('operationscopy')].displayName]",
        "method": "[parameters('apiOperations')[copyIndex('operationscopy')].method]",
        "urlTemplate": "[parameters('apiOperations')[copyIndex('operationscopy')].urlTemplate]",
        "request": {
          "queryParameters": [
            {
              "name": "validationtoken",
              "type": "string",
              "values": []
            }

          ]
        } 
      },
      "resources": []
    }
  ],
  "functions": [],
  "outputs": {}
}