{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflowName": {
      "value": "logic-cpd-apps-mpsidx-tra-we-01"
    },
    "workflowLocation": {
      "value": "westeurope"
    },
    "workflowSchema": {
      "value": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#"
    },
    "workflowTriggers": {
      "value": {
        "manual": {
          "type": "Request",
          "kind": "Http",
          "inputs": {
            "schema": {
              "properties": {
                "data": {
                  "type": "object"
                },
                "dataVersion": {
                  "type": "string"
                },
                "eventTime": {
                  "type": "string"
                },
                "eventType": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "metadataVersion": {
                  "type": "string"
                },
                "subject": {
                  "type": "string"
                },
                "topic": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "workflowActions": {
      "value": {
        "Get_Search_API_Key": {
          "runAfter": {
            "Initialize_Personas_Array_variable": [
              "Succeeded"
            ]
          },
          "type": "ApiConnection",
          "inputs": {
            "host": {
              "connection": {
                "name": "@parameters('$connections')['keyvault']['connectionId']"
              }
            },
            "method": "get",
            "path": "/secrets/@{encodeURIComponent('Azure-Search-Key')}/value"
          },
          "runtimeConfiguration": {
            "secureData": {
              "properties": [
                "outputs"
              ]
            }
          }
        },
        "Initialize_EventData_Object": {
          "runAfter": {
            "Initialize_EventType_String": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "EventData",
                "type": "object",
                "value": "@variables('Event').data"
              }
            ]
          }
        },
        "Initialize_EventType_String": {
          "runAfter": {
            "Initialize_Event_Object": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "EventType",
                "type": "string",
                "value": "@{variables('Event').eventType}"
              }
            ]
          }
        },
        "Initialize_Event_Object": {
          "runAfter": {},
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Event",
                "type": "object",
                "value": "@triggerBody()"
              }
            ]
          }
        },
        "Initialize_Personas_Array_variable": {
          "inputs": {
            "variables": [
              {
                "name": "personasArray",
                "type": "array"
              }
            ]
          },
          "runAfter": {
            "Initialize_ProductsArray_Array": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable"
        },
        "Initialize_ProductsArray_Array": {
          "runAfter": {
            "Initialize_TempBody_Object": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "ProductsArray",
                "type": "array"
              }
            ]
          }
        },
        "Initialize_TempBody_Object": {
          "runAfter": {
            "Initialize_EventData_Object": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "TempBody",
                "type": "object"
              }
            ]
          }
        },
        "Perform_action_as_per_eventtype": {
          "actions": {
            "Parse_Product_JSON": {
              "runAfter": {},
              "type": "ParseJson",
              "inputs": {
                "content": "@variables('EventData')",
                "schema": {
                  "properties": {
                    "id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "imageUrl": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "longDescription": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "modifiedOn": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productPrice": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "providerName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "rating": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "reviewsCount": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "sectorNames": {
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": "array"
                    },
                    "shortDescription": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "featuredProduct": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "popularProduct": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "popularityRating": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "priceOverview": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productCategoryName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productSubCategoryName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "typeOfServiceId": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "providerId": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productStructureId": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "catalogueTypeId": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "customerSegmentIds": {
                      "items": {
                        "type": [
                          "number",
                          "null"
                        ]
                      },
                      "type": "array"
                    },
                    "content": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "metadata_title": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "profileTypeIds": {
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Parse_Product_JSON_AR": {
              "runAfter": {
                "Send_Product_Details_to_Azure_Search": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@variables('EventData').localizedValues",
                "schema": {
                  "properties": {
                    "id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "imageUrl": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "longDescription": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "modifiedOn": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productPrice": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "providerName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "rating": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "reviewsCount": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "sectorNames": {
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": "array"
                    },
                    "shortDescription": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "featuredProduct": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "popularProduct": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "popularityRating": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "priceOverview": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productCategoryName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productSubCategoryName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "typeOfServiceId": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "providerId": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productStructureId": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "catalogueTypeId": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "customerSegmentIds": {
                      "items": {
                        "type": [
                          "number",
                          "null"
                        ]
                      },
                      "type": "array"
                    },
                    "content": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "metadata_title": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "profileTypeIds": {
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Select_Product_Details": {
              "runAfter": {
                "personasForeach": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@createArray(body('Parse_Product_JSON'))",
                "select": {
                  "@@search.action": "mergeOrUpload",
                  "average_rating": "@concat(body('Parse_Product_JSON')?.value['rating'],'')",
                  "catalogueTypeId": "@body('Parse_Product_JSON')?.value['catalogueTypeId']",
                  "content": "@body('Parse_Product_JSON')?.value['longDescription']",
                  "customerSegmentIds": "@coalesce(body('Parse_Product_JSON')?.value['customerSegmentIds'], json('[]'))",
                  "entity_type": "Products & Services",
                  "featuredProduct": "@body('Parse_Product_JSON')?.value['featuredProduct']",
                  "id": "@body('Parse_Product_JSON')?['id']",
                  "language": "en",
                  "merged_content": "@concat(body('Parse_Product_JSON')?.value['longDescription'],body('Parse_Product_JSON')?.value['shortDescription'])",
                  "metadata_creation_date": "@utcNow()",
                  "metadata_last_modified": "@body('Parse_Product_JSON')?.value['modifiedOn']",
                  "metadata_storage_file_extension": "JSON",
                  "metadata_storage_last_modified": "@body('Parse_Product_JSON')?.value['modifiedOn']",
                  "metadata_storage_name": "@body('Parse_Product_JSON')?.value['name']",
                  "metadata_title": "@body('Parse_Product_JSON')?.value['name']",
                  "number_of_rating": "@concat(body('Parse_Product_JSON')?.value['reviewsCount'],'')",
                  "personas": "@coalesce(variables('personasArray'),json('[]'))",
                  "popularProduct": "@body('Parse_Product_JSON')?.value['popularProduct']",
                  "popularityRating": "@body('Parse_Product_JSON')?.value['popularityRating']",
                  "price": "@concat(body('Parse_Product_JSON')?.value['productPrice'],'')",
                  "priceOverview": "@body('Parse_Product_JSON')?.value['priceOverview']",
                  "productCategoryName": "@body('Parse_Product_JSON')?.value['productCategoryName']",
                  "productStructureId": "@body('Parse_Product_JSON')?.value['productStructureId']",
                  "productSubCategoryName": "@body('Parse_Product_JSON')?.value['productSubCategoryName']",
                  "providerId": "@body('Parse_Product_JSON')?.value['providerId']",
                  "provider_name": "@body('Parse_Product_JSON')?.value['providerName']",
                  "search_id": "@concat('ProductsServices-',body('Parse_Product_JSON')['id'])",
                  "sector": "@coalesce(body('Parse_Product_JSON')?.value['sectorNames'],json('[]'))",
                  "short_description": "@body('Parse_Product_JSON')?.value['shortDescription']",
                  "thumbnail_url": "@body('Parse_Product_JSON')?.value['imageUrl']",
                  "typeOfServiceId": "@body('Parse_Product_JSON')?.value['typeOfServiceId']"
                }
              }
            },
            "Select_Product_Details_AR": {
              "runAfter": {
                "Set_TempBody_Variable_Product": [
                  "Succeeded"
                ]
              },
              "type": "Select",
              "inputs": {
                "from": "@createArray(variables('TempBody'))",
                "select": {
                  "@@search.action": "mergeOrUpload",
                  "average_rating": "@concat(variables('TempBody')?.value['rating'],'')",
                  "catalogueTypeId": "@variables('TempBody')?.value['catalogueTypeId']",
                  "content": "@variables('TempBody')?.value['longDescription']",
                  "customerSegmentIds": "@coalesce(variables('TempBody')?.value['customerSegmentIds'], json('[]'))",
                  "entity_type": "Products & Services",
                  "featuredProduct": "@variables('TempBody')?.value['featuredProduct']",
                  "id": "@variables('TempBody').value?['id']",
                  "language": "ar",
                  "merged_content": "@concat(variables('TempBody')?.value['longDescription'],variables('TempBody')?.value['shortDescription'])",
                  "metadata_creation_date": "@utcNow()",
                  "metadata_last_modified": "@variables('TempBody')?.value['modifiedOn']",
                  "metadata_storage_file_extension": "JSON",
                  "metadata_storage_last_modified": "@variables('TempBody')?.value['modifiedOn']",
                  "metadata_storage_name": "@variables('TempBody')?.value['name']",
                  "metadata_title": "@variables('TempBody')?.value['name']",
                  "number_of_rating": "@concat(variables('TempBody')?.value['reviewsCount'],'')",
                  "personas": "@coalesce(variables('personasArray'),json('[]'))",
                  "popularProduct": "@variables('TempBody')?.value['popularProduct']",
                  "popularityRating": "@variables('TempBody')?.value['popularityRating']",
                  "price": "@concat(variables('TempBody')?.value['productPrice'],'')",
                  "priceOverview": "@variables('TempBody')?.value['priceOverview']",
                  "productCategoryName": "@variables('TempBody')?.value['productCategoryName']",
                  "productStructureId": "@variables('TempBody')?.value['productStructureId']",
                  "productSubCategoryName": "@variables('TempBody')?.value['productSubCategoryName']",
                  "providerId": "@variables('TempBody')?.value['providerId']",
                  "provider_name": "@variables('TempBody')?.value['providerName']",
                  "search_id": "@concat('ProductsServicesAr-',variables('TempBody').value['id'])",
                  "sector": "@coalesce(variables('TempBody')?.value['sectorNames'],json('[]'))",
                  "short_description": "@variables('TempBody')?.value['shortDescription']",
                  "thumbnail_url": "@variables('TempBody')?.value['imageUrl']",
                  "typeOfServiceId": "@variables('TempBody')?.value['typeOfServiceId']"
                }
              }
            },
            "Send_Product_Details_to_Azure_Search": {
              "runAfter": {
                "Select_Product_Details": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": {
                  "value": "@body('Select_Product_Details')"
                },
                "headers": {
                  "api-key": "@body('Get_Search_API_Key')?['value']",
                  "content-type": "application/json"
                },
                "method": "POST",
                "uri": "https://srch-cpd-apps-cog-tra-we-01.search.windows.net/indexes/content-index/docs/index?api-version=2020-06-30"
              }
            },
            "Send_Product_Details_to_Azure_Search_AR": {
              "runAfter": {
                "Select_Product_Details_AR": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": {
                  "value": "@body('Select_Product_Details_AR')"
                },
                "headers": {
                  "api-key": "@body('Get_Search_API_Key')?['value']",
                  "content-type": "application/json"
                },
                "method": "POST",
                "uri": "https://srch-cpd-apps-cog-tra-we-01.search.windows.net/indexes/content-index/docs/index?api-version=2020-06-30"
              }
            },
            "Set_TempBody_Variable_Product": {
              "runAfter": {
                "Parse_Product_JSON_AR": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable",
              "inputs": {
                "name": "TempBody",
                "value": {
                  "id": "empty",
                  "value": "@body('Parse_Product_JSON_AR')['ar']"
                }
              }
            },
            "personasForeach": {
              "actions": {
                "Append_to_personas_Array": {
                  "inputs": {
                    "name": "personasArray",
                    "value": "@string(items('personasForeach'))"
                  },
                  "runAfter": {},
                  "type": "AppendToArrayVariable"
                }
              },
              "foreach": "@array(body('Parse_Product_JSON').value?['profileTypeIds'])",
              "runAfter": {
                "Parse_Product_JSON": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "runAfter": {
            "Get_Search_API_Key": [
              "Succeeded"
            ]
          },
          "else": {
            "actions": {
              "Condition": {
                "actions": {
                  "For_each": {
                    "actions": {
                      "Append_to_array_variable": {
                        "inputs": {
                          "name": "ProductsArray",
                          "value": "@json(string(body('Select')[0]))"
                        },
                        "runAfter": {
                          "Select": [
                            "Succeeded"
                          ]
                        },
                        "type": "AppendToArrayVariable"
                      },
                      "Select": {
                        "inputs": {
                          "from": "@array(json(string(items('For_each'))))",
                          "select": {
                            "catalogueId": "@json(string(items('For_each'))).catalogueId",
                            "category": "@json(string(items('For_each'))).productCategoryName",
                            "personas": "@coalesce(variables('personasArray'),json('[]'))",
                            "sectors": "@json(string(items('For_each'))).sectorNames"
                          }
                        },
                        "runAfter": {
                          "kbpersonasforeach": [
                            "Succeeded"
                          ]
                        },
                        "type": "Select"
                      },
                      "kbpersonasforeach": {
                        "actions": {
                          "Append_to_array_variable_2": {
                            "inputs": {
                              "name": "personasArray",
                              "value": "@string(items('kbpersonasforeach'))"
                            },
                            "runAfter": {},
                            "type": "AppendToArrayVariable"
                          }
                        },
                        "foreach": "@coalesce(items('For_each').profileTypeIds,json('[]'))",
                        "runAfter": {},
                        "type": "Foreach"
                      }
                    },
                    "foreach": "@array(body('Parse_KB_JSON').value?['relatedProducts'])",
                    "runAfter": {
                      "Parse_KB_JSON": [
                        "Succeeded"
                      ]
                    },
                    "type": "Foreach"
                  },
                  "Parse_KB_JSON": {
                    "runAfter": {},
                    "type": "ParseJson",
                    "inputs": {
                      "content": "@variables('EventData')",
                      "schema": {
                        "properties": {
                          "content": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "rating": {
                            "type": "string"
                          },
                          "relatedProducts": {
                            "type": "array"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "Select_KB_Details": {
                    "runAfter": {
                      "For_each": [
                        "Succeeded"
                      ]
                    },
                    "type": "Select",
                    "inputs": {
                      "from": "@createArray(body('Parse_KB_JSON'))",
                      "select": {
                        "@@search.action": "mergeOrUpload",
                        "average_rating": "@body('Parse_KB_JSON')?.value['rating']",
                        "content": "@body('Parse_KB_JSON')?.value['content']",
                        "entity_type": "KbArticle",
                        "featuredArticle": "@body('Parse_KB_JSON')?.value['featuredArticle']",
                        "id": "@body('Parse_KB_JSON')?.value['id']",
                        "language": "@body('Parse_KB_JSON')?.value['languageShortCode']",
                        "merged_content": "@concat(body('Parse_KB_JSON')?.value['content'],body('Parse_KB_JSON')?.value['description'])",
                        "metadata_creation_date": "@utcNow()",
                        "metadata_last_modified": "@utcNow()",
                        "metadata_storage_file_extension": "JSON",
                        "metadata_storage_last_modified": "@utcNow()",
                        "metadata_storage_name": "@body('Parse_KB_JSON')?.value['title']",
                        "products": "@variables('ProductsArray')",
                        "search_id": "@concat('KbArticle-',body('Parse_KB_JSON')?.value['id'])",
                        "short_description": "@body('Parse_KB_JSON')?.value['description']"
                      }
                    }
                  },
                  "Send_KB_Details_to_Azure_Search": {
                    "runAfter": {
                      "Select_KB_Details": [
                        "Succeeded"
                      ]
                    },
                    "type": "Http",
                    "inputs": {
                      "body": {
                        "value": "@body('Select_KB_Details')"
                      },
                      "headers": {
                        "api-key": "@body('Get_Search_API_Key')?['value']",
                        "content-type": "application/json"
                      },
                      "method": "POST",
                      "uri": "https://srch-cpd-apps-cog-tra-we-01.search.windows.net/indexes/content-index/docs/index?api-version=2020-06-30"
                    }
                  }
                },
                "runAfter": {},
                "else": {
                  "actions": {
                    "Parse_News_JSON": {
                      "runAfter": {},
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@variables('EventData')",
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "longDescription": {
                              "type": "string"
                            },
                            "modified": {
                              "type": "string"
                            },
                            "publishedDate": {
                              "type": "string"
                            },
                            "shortDescription": {
                              "type": "string"
                            },
                            "thumbnailImage": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "readingTime": {
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_News_JSON_AR": {
                      "runAfter": {
                        "Send_News_Details_to_Azure_Search": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@variables('EventData').localizedValues",
                        "schema": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "longDescription": {
                              "type": "string"
                            },
                            "modified": {
                              "type": "string"
                            },
                            "publishedDate": {
                              "type": "string"
                            },
                            "shortDescription": {
                              "type": "string"
                            },
                            "thumbnailImage": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "readingTime": {
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Select_News_Details": {
                      "runAfter": {
                        "Parse_News_JSON": [
                          "Succeeded"
                        ]
                      },
                      "type": "Select",
                      "inputs": {
                        "from": "@createArray(body('Parse_News_JSON'))",
                        "select": {
                          "@@search.action": "mergeOrUpload",
                          "entity_type": "News",
                          "id": "@body('Parse_News_JSON')?['id']",
                          "keywords": "@body('Parse_News_JSON')?.value['keywords']",
                          "language": "en",
                          "merged_content": "@concat(body('Parse_News_JSON')?.value['longDescription'],body('Parse_News_JSON')?.value['shortDescription'])",
                          "metadata_creation_date": "@body('Parse_News_JSON')?.value['publishedDate']",
                          "metadata_last_modified": "@body('Parse_News_JSON')?.value['modified']",
                          "metadata_storage_file_extension": "JSON",
                          "metadata_storage_last_modified": "@body('Parse_News_JSON')?.value['modified']",
                          "metadata_storage_name": "@body('Parse_News_JSON')?.value['title']",
                          "personas": "@body('Parse_News_JSON')?.value['personas']",
                          "search_id": "@concat('News-',body('Parse_News_JSON')?.value['id'])",
                          "sector": "@body('Parse_News_JSON')?.value['sectors']",
                          "short_description": "@body('Parse_News_JSON')?.value['shortDescription']",
                          "thumbnail_url": "@body('Parse_News_JSON')?.value['thumbnailImage']",
                          "readingTime": "@body('Parse_News_JSON')?.value['readingTime']"
                        }
                      }
                    },
                    "Select_News_Details_AR": {
                      "runAfter": {
                        "Set__TempBody_Variable_News": [
                          "Succeeded"
                        ]
                      },
                      "type": "Select",
                      "inputs": {
                        "from": "@createArray(variables('TempBody'))",
                        "select": {
                          "@@search.action": "mergeOrUpload",
                          "entity_type": "News",
                          "id": "@variables('TempBody')?.value['id']",
                          "keywords": "@variables('TempBody')?.value['keywords']",
                          "language": "ar",
                          "merged_content": "@concat(variables('TempBody')?.value['longDescription'],variables('TempBody')?.value['shortDescription'])",
                          "metadata_creation_date": "@variables('TempBody')?.value['publishedDate']",
                          "metadata_last_modified": "@variables('TempBody')?.value['modified']",
                          "metadata_storage_file_extension": "JSON",
                          "metadata_storage_last_modified": "@variables('TempBody')?.value['modified']",
                          "metadata_storage_name": "@variables('TempBody')?.value['title']",
                          "personas": "@variables('TempBody')?.value['personas']",
                          "search_id": "@concat('News-',variables('TempBody')?.value['id'])",
                          "sector": "@variables('TempBody')?.value['sectors']",
                          "short_description": "@variables('TempBody')?.value['shortDescription']",
                          "thumbnail_url": "@variables('TempBody')?.value['thumbnailImage']",
                          "readingTime": "@variables('TempBody')?.value['readingTime']"
                        }
                      }
                    },
                    "Send_News_Details_to_Azure_Search": {
                      "runAfter": {
                        "Select_News_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": {
                          "value": "@body('Select_News_Details')"
                        },
                        "headers": {
                          "api-key": "@body('Get_Search_API_Key')?['value']",
                          "content-type": "application/json"
                        },
                        "method": "POST",
                        "uri": "https://srch-cpd-apps-cog-tra-we-01.search.windows.net/indexes/content-index/docs/index?api-version=2020-06-30"
                      }
                    },
                    "Send_News_Details_to_Azure_Search_AR": {
                      "runAfter": {
                        "Select_News_Details_AR": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": {
                          "value": "@body('Select_News_Details_AR')"
                        },
                        "headers": {
                          "api-key": "@body('Get_Search_API_Key')?['value']",
                          "content-type": "application/json"
                        },
                        "method": "POST",
                        "uri": "https://srch-cpd-apps-cog-tra-we-01.search.windows.net/indexes/content-index/docs/index?api-version=2020-06-30"
                      }
                    },
                    "Set__TempBody_Variable_News": {
                      "runAfter": {
                        "Parse_News_JSON_AR": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "TempBody",
                        "value": {
                          "id": "empty",
                          "value": "@body('Parse_News_JSON_AR')['ar']"
                        }
                      }
                    }
                  }
                },
                "expression": {
                  "or": [
                    {
                      "equals": [
                        "@variables('EventType')",
                        "kbarticle-created"
                      ]
                    },
                    {
                      "equals": [
                        "@variables('EventType')",
                        "kbarticle-updated"
                      ]
                    }
                  ]
                },
                "type": "If"
              }
            }
          },
          "expression": {
            "or": [
              {
                "equals": [
                  "@variables('EventType')",
                  "product-created"
                ]
              },
              {
                "equals": [
                  "@variables('EventType')",
                  "product-updated"
                ]
              }
            ]
          },
          "type": "If"
        },
        "Response": {
          "runAfter": {
            "Perform_action_as_per_eventtype": [
              "Succeeded"
            ]
          },
          "type": "Response",
          "kind": "Http",
          "inputs": {
            "body": "Event has been processed.",
            "statusCode": 200
          }
        }
      }
    },
    "workflowParameters": {
      "value": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      }
    },
    "connectionParameters": {
      "value": {
        "$connections": {
          "value": {
            "keyvault": {
              "connectionId": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-int-tra-we-01/providers/Microsoft.Web/connections/apicon-cpd-apps-intkv-tra-we-01",
              "connectionName": "apicon-cpd-apps-intkv-tra-we-01",
              "id": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/providers/Microsoft.Web/locations/westeurope/managedApis/keyvault"
            }
          }
        }
      }
    },
    "diagnosticLogsRetentionInDays": {
      "value": 365
    },
    "diagnosticStorageAccountId": {
      "value": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-mon-tra-we-01/providers/Microsoft.Storage/storageAccounts/stcpdappsdiagtrawe01"
    },
    "workspaceId": {
      "value": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-mon-tra-we-01/providers/Microsoft.OperationalInsights/workspaces/log-cpd-apps-mon-tra-we-01"
    },
    "eventHubAuthorizationRuleId": {
      "value": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-mon-tra-we-01/providers/Microsoft.EventHub/namespaces/evhns-cpd-apps-mon-tra-we-01/authorizationrules/RootManageSharedAccessKey"
    },
    "eventHubName": {
      "value": "evh-cpd-apps-mon-tra-we-01"
    },
    "tags": {
      "value": {
        "Environment": "Training"
      }
    }
  }
}