{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflowName": {
      "value": "logic-cpp-apps-intacnt-prd-we-01"
    },
    "workflowLocation": {
      "value": "westeurope"
    },
    "workflowSchema": {
      "value": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#"
    },
    "workflowTriggers": {
      "value": {
        "When_a_resource_event_occurs": {
          "inputs": {
            "body": {
              "properties": {
                "destination": {
                  "endpointType": "webhook",
                  "properties": {
                    "endpointUrl": "@{listCallbackUrl()}"
                  }
                },
                "filter": {
                  "includedEventTypes": [
                    "account-updated"
                  ]
                },
                "topic": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-int-prd-we-01/providers/Microsoft.EventGrid/domains/egd-cpp-apps-int-prd-we-01/topics/6dbilling"
              }
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['apicon-cpp-apps-integ-prd-we-01']['connectionId']"
              }
            },
            "path": "/subscriptions/@{encodeURIComponent('8964f3c1-44f5-4094-80eb-4334845bdfb1')}/providers/@{encodeURIComponent('Microsoft.EventGrid.Domains')}/resource/eventSubscriptions",
            "queries": {
              "subscriptionName": "logic-cpp-apps-intacnt-prd-we-01-sub",
              "x-ms-api-version": "2017-09-15-preview"
            }
          },
          "splitOn": "@triggerBody()",
          "type": "ApiConnectionWebhook"
        }
      }
    },
    "workflowActions": {
      "value": {
        "CustomerTypeId_Field_Validation_Check": {
          "actions": {
            "CustomerType": {
              "cases": {
                "Organisation": {
                  "actions": {
                    "Checking_if_organisation_record_contain_data_or_not": {
                      "actions": {
                        "For_each": {
                          "actions": {
                            "Update_Organisation": {
                              "inputs": {
                                "body": {
                                  "cpm_customersegment": 923080003
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['apicon-cpp-apps-pflcds-prd-we-01']['connectionId']"
                                  }
                                },
                                "method": "patch",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('1e2d3f93a7bd493aab65ddd99f20cf17.crm4'))}/tables/@{encodeURIComponent(encodeURIComponent('accounts'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_each')?['accountid']))}"
                              },
                              "runAfter": {},
                              "type": "ApiConnection"
                            }
                          },
                          "foreach": "@body('Get_Organisation')?['value']",
                          "runAfter": {},
                          "type": "Foreach"
                        }
                      },
                      "else": {
                        "actions": {
                          "OrganisationNotFoundMessage": {
                            "inputs": {
                              "runError": {
                                "code": "400",
                                "message": "No Organisation Found"
                              },
                              "runStatus": "Failed"
                            },
                            "runAfter": {},
                            "type": "Terminate"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(body('Get_Organisation')?['value'])",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_Organisation": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "Get_Organisation": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['apicon-cpp-apps-pflcds-prd-we-01']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('1e2d3f93a7bd493aab65ddd99f20cf17.crm4'))}/tables/@{encodeURIComponent(encodeURIComponent('accounts'))}/items",
                        "queries": {
                          "$filter": "accountid eq '@{body('Parse_JSON')?['value']?['customerId']}'",
                          "$top": 1
                        }
                      },
                      "runAfter": {},
                      "type": "ApiConnection"
                    }
                  },
                  "case": 1
                },
                "profile": {
                  "actions": {
                    "Checking_if_profile_record_contain_data_or_not": {
                      "actions": {
                        "For_each_2": {
                          "actions": {
                            "Update_Profile": {
                              "inputs": {
                                "body": {
                                  "_ownerid_type": "",
                                  "_parentcustomerid_type": "",
                                  "cpm_customersegment": 923080003
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['apicon-cpp-apps-pflcds-prd-we-01']['connectionId']"
                                  }
                                },
                                "method": "patch",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('1e2d3f93a7bd493aab65ddd99f20cf17.crm4'))}/tables/@{encodeURIComponent(encodeURIComponent('contacts'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_each_2')?['contactid']))}"
                              },
                              "runAfter": {},
                              "type": "ApiConnection"
                            }
                          },
                          "foreach": "@body('Get_Profile')?['value']",
                          "runAfter": {},
                          "type": "Foreach"
                        }
                      },
                      "else": {
                        "actions": {
                          "ProfileNotFoundMessage": {
                            "inputs": {
                              "runError": {
                                "code": "400",
                                "message": "No Profile Found"
                              },
                              "runStatus": "Failed"
                            },
                            "runAfter": {},
                            "type": "Terminate"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(body('Get_Profile')?['value'])",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_Profile": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "Get_Profile": {
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['apicon-cpp-apps-pflcds-prd-we-01']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('1e2d3f93a7bd493aab65ddd99f20cf17.crm4'))}/tables/@{encodeURIComponent(encodeURIComponent('contacts'))}/items",
                        "queries": {
                          "$filter": "contactid eq '@{body('Parse_JSON')?['value']?['customerId']}'",
                          "$top": 1
                        }
                      },
                      "runAfter": {},
                      "type": "ApiConnection"
                    }
                  },
                  "case": 0
                }
              },
              "default": {
                "actions": {}
              },
              "expression": "@int(body('Parse_JSON')?['value']?['customerTypeId'])",
              "runAfter": {},
              "type": "Switch"
            }
          },
          "else": {
            "actions": {
              "Terminate": {
                "inputs": {
                  "runError": {
                    "code": "400",
                    "message": "Invalid customerTypeId/StatusId."
                  },
                  "runStatus": "Failed"
                },
                "runAfter": {},
                "type": "Terminate"
              }
            }
          },
          "expression": {
            "and": [
              {
                "or": [
                  {
                    "equals": [
                      "@body('Parse_JSON')?['value']?['customerTypeId']",
                      "@string(0)"
                    ]
                  },
                  {
                    "equals": [
                      "@body('Parse_JSON')?['value']?['customerTypeId']",
                      "@string(1)"
                    ]
                  }
                ]
              },
              {
                "or": [
                  {
                    "equals": [
                      "@body('Parse_JSON')?['value']?['statusId']",
                      "@string(2)"
                    ]
                  },
                  {
                    "equals": [
                      "@body('Parse_JSON')?['value']?['statusId']",
                      "@string(3)"
                    ]
                  },
                  {
                    "equals": [
                      "@body('Parse_JSON')?['value']?['statusId']",
                      "@string(4)"
                    ]
                  }
                ]
              }
            ]
          },
          "runAfter": {
            "Parse_JSON": [
              "Succeeded"
            ]
          },
          "type": "If"
        },
        "Parse_JSON": {
          "inputs": {
            "content": "@triggerBody()?['data']",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "customerId": {
                      "minLength": 1,
                      "required": true,
                      "type": "string"
                    },
                    "customerTypeId": {
                      "minLength": 1,
                      "required": true,
                      "type": "string"
                    },
                    "statusId": {
                      "minLength": 1,
                      "required": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "runAfter": {},
          "type": "ParseJson"
        }
      }
    },
    "workflowParameters": {
      "value": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      }
    },
    "diagnosticLogsRetentionInDays": {
      "value": 365
    },
    "diagnosticStorageAccountId": {
      "value": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-mon-prd-we-01/providers/Microsoft.Storage/storageAccounts/stcppappsdiagprdwe01"
    },
    "workspaceId": {
      "value": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-mon-prd-we-01/providers/Microsoft.OperationalInsights/workspaces/log-cpp-apps-mon-prd-we-01"
    },
    "eventHubAuthorizationRuleId": {
      "value": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-mon-prd-we-01/providers/Microsoft.EventHub/namespaces/evhns-cpp-apps-mon-prd-we-01/authorizationrules/RootManageSharedAccessKey"
    },
    "eventHubName": {
      "value": "evh-cpp-apps-mon-prd-we-01"
    },
    "tags": {
      "value": {
        "Environment": "Production"
      }
    },
    "connectionParameters": {
      "value": {
        "$connections": {
          "value": {
            "apicon-cpp-apps-integ-prd-we-01": {
              "connectionId": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-int-prd-we-01/providers/Microsoft.Web/connections/apicon-cpp-apps-integ-prd-we-01",
              "connectionName": "apicon-cpp-apps-integ-prd-we-01",
              "id": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/providers/Microsoft.Web/locations/westeurope/managedApis/azureeventgrid"
            },
            "apicon-cpp-apps-pflcds-prd-we-01": {
              "connectionId": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-int-prd-we-01/providers/Microsoft.Web/connections/apicon-cpp-apps-pflcds-prd-we-01",
              "connectionName": "apicon-cpp-apps-pflcds-prd-we-01",
              "id": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/providers/Microsoft.Web/locations/westeurope/managedApis/commondataservice"
            }
          }
        }
      }
    }
  }
}