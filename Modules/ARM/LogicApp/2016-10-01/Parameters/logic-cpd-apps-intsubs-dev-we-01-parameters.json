{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflowName": {
      "value": "logic-cpd-apps-intsubs-dev-we-01"
    },
    "workflowLocation": {
      "value": "westeurope"
    },
    "workflowSchema": {
      "value": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#"
    },
    "workflowTriggers": {
      "value": {
        "When_a_resource_event_occurs": {
          "inputs": {
            "body": {
              "properties": {
                "destination": {
                  "endpointType": "webhook",
                  "properties": {
                    "endpointUrl": "@{listCallbackUrl()}"
                  }
                },
                "filter": {
                  "includedEventTypes": [
                    "subscription-created",
                    "subscription-updated"
                  ]
                },
                "topic": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-int-dev-we-01/providers/Microsoft.EventGrid/domains/egd-cpd-apps-int-dev-we-01/topics/6dbilling"
              }
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['apicon-cpd-apps-integ-dev-we-01']['connectionId']"
              }
            },
            "path": "/subscriptions/@{encodeURIComponent('d0694def-b27e-4bb7-900d-437fbeb802da')}/providers/@{encodeURIComponent('Microsoft.EventGrid.Domains')}/resource/eventSubscriptions",
            "queries": {
              "x-ms-api-version": "2017-09-15-preview"
            }
          },
          "splitOn": "@triggerBody()",
          "type": "ApiConnectionWebhook"
        }
      }
    },
    "workflowActions": {
      "value": {
        "Mandatory_Fields_Check": {
          "actions": {
            "Checking_Event_Type": {
              "actions": {
                "Create_Marketplace_Product_Subscription": {
                  "inputs": {
                    "body": {
                      "_cpm_contact_value": "@{if(equals(body('Parse_JSON')?['value']?['customerTypeId'],'1'),body('Parse_JSON')?['value']?['customerId'],null)}",
                      "_cpm_organisation_value": "@{if(equals(body('Parse_JSON')?['value']?['customerTypeId'],'2'),body('Parse_JSON')?['value']?['customerId'],null)}",
                      "_cpm_service_value": "@body('Parse_JSON')?['value']?['productId']",
                      "cpm_description": "@body('Parse_JSON')?['value']?['description']",
                      "cpm_externalreferencenumber": "@{body('Parse_JSON')?['value']?['id']}",
                      "cpm_name": "@{body('Parse_JSON')?['value']?['name']}",
                      "cpm_status": "@body('Parse_JSON')?['value']?['statusId']",
                      "cpm_statusreason": "@body('Parse_JSON')?['value']?['statusReasonId']"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['apicon-cpd-apps-prdcds-dev-we-01']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('tasmu-dev21.crm4'))}/tables/@{encodeURIComponent(encodeURIComponent('cpm_servicesubscriptions'))}/items"
                  },
                  "runAfter": {},
                  "type": "ApiConnection"
                }
              },
              "else": {
                "actions": {
                  "Checking_if_subscription_record_doesnt_contain_data_or_not": {
                    "actions": {
                      "For_each": {
                        "actions": {
                          "_Update_Marketplace_Product_Subscription": {
                            "inputs": {
                              "body": {
                                "_cpm_contact_value": "@{if(equals(body('Parse_JSON')?['value']?['customerTypeId'],'1'),body('Parse_JSON')?['value']?['customerId'],items('For_each')?['_cpm_contact_value'])}",
                                "_cpm_organisation_value": "@{\r\nif(equals(body('Parse_JSON')?['value']?['customerTypeId'],'2'),body('Parse_JSON')?['value']?['customerId'],items('For_each')?['_cpm_organisation_value'])}",
                                "_cpm_service_value": "@body('Parse_JSON')?['value']?['productId']",
                                "cpm_description": "@{body('Parse_JSON')?['value']?['description']}",
                                "cpm_name": "@{if(empty(body('Parse_JSON')?['value']?['name']),items('For_each')?['cpm_name'],body('Parse_JSON')?['value']?['name'])}",
                                "cpm_status": "@body('Parse_JSON')?['value']?['statusId']",
                                "cpm_statusreason": "@body('Parse_JSON')?['value']?['statusReasonId']"
                              },
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['apicon-cpd-apps-prdcds-dev-we-01']['connectionId']"
                                }
                              },
                              "method": "patch",
                              "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('tasmu-dev21.crm4'))}/tables/@{encodeURIComponent(encodeURIComponent('cpm_servicesubscriptions'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_each')?['cpm_servicesubscriptionid']))}"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                          }
                        },
                        "foreach": "@body('Get_Marketplace_Product_Subscriptions_Records')?['value']",
                        "runAfter": {},
                        "type": "Foreach"
                      }
                    },
                    "else": {
                      "actions": {
                        "Terminate": {
                          "inputs": {
                            "runError": {
                              "code": "404 ",
                              "message": "No records found"
                            },
                            "runStatus": "Failed"
                          },
                          "runAfter": {},
                          "type": "Terminate"
                        }
                      }
                    },
                    "expression": {
                      "and": [
                        {
                          "greater": [
                            "@length(body('Get_Marketplace_Product_Subscriptions_Records')?['value'])",
                            0
                          ]
                        },
                        {
                          "equals": [
                            "@triggerBody()?['eventType']",
                            "subscription-updated"
                          ]
                        }
                      ]
                    },
                    "runAfter": {
                      "Get_Marketplace_Product_Subscriptions_Records": [
                        "Succeeded"
                      ]
                    },
                    "type": "If"
                  },
                  "Get_Marketplace_Product_Subscriptions_Records": {
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['apicon-cpd-apps-prdcds-dev-we-01']['connectionId']"
                        }
                      },
                      "method": "get",
                      "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('tasmu-dev21.crm4'))}/tables/@{encodeURIComponent(encodeURIComponent('cpm_servicesubscriptions'))}/items",
                      "queries": {
                        "$filter": "cpm_externalreferencenumber eq '@{body('Parse_JSON')?['value']?['id']}' ",
                        "$top": 1
                      }
                    },
                    "runAfter": {},
                    "type": "ApiConnection"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@triggerBody()?['eventType']",
                      "subscription-created"
                    ]
                  }
                ]
              },
              "runAfter": {},
              "type": "If"
            }
          },
          "else": {
            "actions": {
              "Terminate_": {
                "inputs": {
                  "runError": {
                    "code": "400",
                    "message": "Required fields missing."
                  },
                  "runStatus": "Failed"
                },
                "runAfter": {},
                "type": "Terminate"
              }
            }
          },
          "expression": {
            "and": [
              {
                "or": [
                  {
                    "equals": [
                      "@body('Parse_JSON')?['value']?['customerTypeId']",
                      "@string(1)"
                    ]
                  },
                  {
                    "equals": [
                      "@body('Parse_JSON')?['value']?['customerTypeId']",
                      "@string(2)"
                    ]
                  }
                ]
              },
              {
                "not": {
                  "equals": [
                    "@empty(body('Parse_JSON')?['value']?['customerId'])",
                    "@true"
                  ]
                }
              },
              {
                "not": {
                  "equals": [
                    "@empty(body('Parse_JSON')?['value']?['id'])",
                    "@true"
                  ]
                }
              },
              {
                "not": {
                  "equals": [
                    "@empty(body('Parse_JSON')?['value']?['productId'])",
                    "@true"
                  ]
                }
              },
              {
                "not": {
                  "equals": [
                    "@empty(body('Parse_JSON')?['value']?['statusId'])",
                    "@true"
                  ]
                }
              },
              {
                "not": {
                  "equals": [
                    "@empty(body('Parse_JSON')?['value']?['statusReasonId'])",
                    "@true"
                  ]
                }
              }
            ]
          },
          "runAfter": {
            "Parse_JSON": [
              "Succeeded"
            ]
          },
          "type": "If"
        },
        "Parse_JSON": {
          "inputs": {
            "content": "@triggerBody()?['data']",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "customerId": {
                      "type": "string"
                    },
                    "customerTypeId": {
                      "type": "string"
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "productId": {
                      "type": "string"
                    },
                    "statusId": {
                      "type": "string"
                    },
                    "statusReasonId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "runAfter": {},
          "type": "ParseJson"
        }
      }
    },
    "workflowParameters": {
      "value": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      }
    },
    "tags": {
      "value": {
        "Environment": "Development"
      }
    },
    "connectionParameters": {
      "value": {
        "$connections": {
          "value": {
            "apicon-cpd-apps-integ-dev-we-01": {
              "connectionId": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-int-dev-we-01/providers/Microsoft.Web/connections/apicon-cpd-apps-integ-dev-we-01",
              "connectionName": "apicon-cpd-apps-integ-dev-we-01",
              "id": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/providers/Microsoft.Web/locations/westeurope/managedApis/azureeventgrid"
            },
            "apicon-cpd-apps-prdcds-dev-we-01": {
              "connectionId": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-int-dev-we-01/providers/Microsoft.Web/connections/apicon-cpd-apps-prdcds-dev-we-01",
              "connectionName": "apicon-cpd-apps-prdcds-dev-we-01",
              "id": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/providers/Microsoft.Web/locations/westeurope/managedApis/commondataservice"
            }
          }
        }
      }
    }
  }
}