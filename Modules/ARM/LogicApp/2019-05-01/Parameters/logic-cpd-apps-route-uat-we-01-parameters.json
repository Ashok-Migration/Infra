{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflowName": {
      "value": "logic-cpd-apps-route-uat-we-01"
    },
    "workflowLocation": {
      "value": "westeurope"
    },
    "workflowSchema": {
      "value": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#"
    },
    "workflowTriggers": {
      "value": {
        "manual": {
          "type": "Request",
          "kind": "Http",
          "inputs": {
            "method": "POST",
            "schema": {
              "properties": {
                "data": {
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dataVersion": {
                  "type": "string"
                },
                "eventTime": {
                  "type": "string"
                },
                "eventType": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "metadataVersion": {
                  "type": "string"
                },
                "subject": {
                  "type": "string"
                },
                "topic": {
                  "type": "string"
                }
              },
              "required": [
                "topic",
                "subject",
                "id",
                "eventType",
                "eventTime",
                "data"
              ],
              "type": "object"
            }
          },
          "operationOptions": "EnableSchemaValidation"
        }
      }
    },
    "workflowActions": {
      "value": {
        "Convert_Message_Into_JSON_Object": {
          "runAfter": {},
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "InsertedMessage",
                "type": "object",
                "value": "@triggerBody()"
              }
            ]
          }
        },
        "Create_Queue_Route_From_Topic_": {
          "runAfter": {
            "Convert_Message_Into_JSON_Object": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "Route",
                "type": "string",
                "value": "@{concat('events.',toLower(variables('InsertedMessage').topic))}"
              }
            ]
          }
        },
        "Create_blob": {
          "runAfter": {
            "Initialize_Folder_Path_for_Event_Archive": [
              "Succeeded"
            ]
          },
          "type": "ApiConnection",
          "inputs": {
            "body": "@binary(variables('InsertedMessage'))",
            "headers": {
              "Content-Type": "application/json"
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['apicon-cpd-apps-intst-uat-we-01']['connectionId']"
              }
            },
            "method": "post",
            "path": "/datasets/default/files",
            "queries": {
              "folderPath": "@variables('BlobFolderPath')",
              "name": "@variables('BlobFileName')",
              "queryParametersSingleEncoded": true
            }
          },
          "runtimeConfiguration": {
            "contentTransfer": {
              "transferMode": "Chunked"
            }
          }
        },
        "Initialize_File_Name_for_Event_Archive": {
          "runAfter": {
            "Send_Message_To_Queue": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "BlobFileName",
                "type": "string",
                "value": "@{concat(toLower(variables('InsertedMessage').topic),'-',utcNow(), '.json')}"
              }
            ]
          }
        },
        "Initialize_Folder_Path_for_Event_Archive": {
          "runAfter": {
            "Initialize_File_Name_for_Event_Archive": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "BlobFolderPath",
                "type": "string",
                "value": "@{toLower(variables('InsertedMessage').topic)}/@{formatDateTime(utcNow(), 'yyyy-MM-dd')}"
              }
            ]
          }
        },
        "Initialize_Log_Name_for_Log_Analytics": {
          "runAfter": {
            "Create_blob": [
              "Succeeded"
            ]
          },
          "type": "InitializeVariable",
          "inputs": {
            "variables": [
              {
                "name": "LogName",
                "type": "string",
                "value": "@{concat('log_',toLower(variables('InsertedMessage').topic))}"
              }
            ]
          }
        },
        "Response": {
          "runAfter": {
            "Create_Log": [
              "Succeeded"
            ]
          },
          "type": "Response",
          "kind": "Http",
          "inputs": {
            "body": "Message has been inserted in to the @{variables('Route')} queue",
            "statusCode": 200
          }
        },
        "Create_Log": {
            "runAfter": {
                "Initialize_Log_Name_for_Log_Analytics": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "body": "@{binary(variables('InsertedMessage'))}",
                "headers": {
                    "Log-Type": "@variables('LogName')"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['apicon-cpd-apps-log-uat-we-01']['connectionId']"
                    }
                },
                "method": "post",
                "path": "/api/logs"
            }
        },
        "Send_Message_To_Queue": {
          "runAfter": {
            "Create_Queue_Route_From_Topic_": [
              "Succeeded"
            ]
          },
          "type": "ApiConnection",
          "inputs": {
            "body": {
              "ContentData": "@{base64(binary(variables('InsertedMessage')))}",
              "ContentType": "application/json",
              "SessionId": "guid()"
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['apicon-cpd-apps-intsb-uat-we-01']['connectionId']"
              }
            },
            "method": "post",
            "path": "/@{encodeURIComponent(encodeURIComponent(variables('Route')))}/messages",
            "queries": {
              "systemProperties": "None"
            }
          }
        }
      }
    },
    "workflowParameters": {
      "value": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      }
    },
    "accessControl": {
      "value": {
        "triggers": {
          "allowedCallerIpAddresses": [
            {
              "addressRange": "20.67.117.221/32"
            }
          ]
        },
        "actions": {
          "allowedCallerIpAddresses": [
            {
              "addressRange": "20.67.117.221/32"
            }
          ]
        }
      }
    },
    "diagnosticLogsRetentionInDays": {
      "value": 365
    },
    "diagnosticStorageAccountId": {
      "value": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-mon-uat-we-01/providers/Microsoft.Storage/storageAccounts/stcpdappsdiaguatwe01"
    },
    "workspaceId": {
      "value": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-mon-uat-we-01/providers/Microsoft.OperationalInsights/workspaces/log-cpd-apps-mon-uat-we-01"
    },
    "eventHubAuthorizationRuleId": {
      "value": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-mon-uat-we-01/providers/Microsoft.EventHub/namespaces/evhns-cpd-apps-mon-uat-we-01/authorizationrules/RootManageSharedAccessKey"
    },
    "eventHubName": {
      "value": "evh-cpd-apps-mon-uat-we-01"
    },
    "tags": {
      "value": {
        "Environment": "UAT"
      }
    },
    "connectionParameters": {
      "value": {
        "$connections": {
          "value": {
            "apicon-cpd-apps-intsb-uat-we-01": {
              "connectionId": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-int-uat-we-01/providers/Microsoft.Web/connections/apicon-cpd-apps-intsb-uat-we-01",
              "connectionName": "apicon-cpd-apps-intsb-uat-we-01",
              "id": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/providers/Microsoft.Web/locations/westeurope/managedApis/servicebus"
            },
            "apicon-cpd-apps-intst-uat-we-01": {
              "connectionId": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-int-uat-we-01/providers/Microsoft.Web/connections/apicon-cpd-apps-intst-uat-we-01",
              "connectionName": "apicon-cpd-apps-intst-uat-we-01",
              "id": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/providers/Microsoft.Web/locations/westeurope/managedApis/azureblob"
            },
            "apicon-cpd-apps-log-uat-we-01": {
              "connectionId": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/resourceGroups/rg-cpd-apps-int-uat-we-01/providers/Microsoft.Web/connections/apicon-cpd-apps-log-uat-we-01",
              "connectionName": "apicon-cpd-apps-log-uat-we-01",
              "id": "/subscriptions/d0694def-b27e-4bb7-900d-437fbeb802da/providers/Microsoft.Web/locations/westeurope/managedApis/azureloganalyticsdatacollector"
            }
          }
        }
      }
    }
  }
}