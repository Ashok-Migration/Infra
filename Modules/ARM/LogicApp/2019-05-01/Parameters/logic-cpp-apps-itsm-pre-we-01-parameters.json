{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflowName": {
      "value": "logic-cpp-apps-itsm-pre-we-01"
    },
    "workflowLocation": {
      "value": "westeurope"
    },
    "workflowSchema": {
      "value": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#"
    },
    "workflowTriggers": {
      "value": {
        "When_a_resource_event_occurs": {
          "inputs": {
            "body": {
              "properties": {
                "destination": {
                  "endpointType": "webhook",
                  "properties": {
                    "endpointUrl": "@{listCallbackUrl()}"
                  }
                },
                "filter": {
                  "includedEventTypes": [
                    "servicerequest-routed-itsm",
                    "servicerequest-updated"
                  ]
                },
                "topic": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-int-pre-we-01/providers/Microsoft.EventGrid/domains/egd-cpp-apps-int-pre-we-01/topics/d365"
              }
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
              }
            },
            "path": "/subscriptions/@{encodeURIComponent('8964f3c1-44f5-4094-80eb-4334845bdfb1')}/providers/@{encodeURIComponent('Microsoft.EventGrid.Domains')}/resource/eventSubscriptions",
            "queries": {
              "subscriptionName": "logic-cpp-apps-itsm-pre-we-01-sub",
              "x-ms-api-version": "2017-09-15-preview"
            }
          },
          "splitOn": "@triggerBody()",
          "type": "ApiConnectionWebhook"
        }
      }
    },
    "workflowActions": {
      "value": {
        "Condition": {
          "actions": {
            "Compose": {
              "inputs": {
                "ServiceName": "SR_LogServiceRequestCatalog",
                "objCommonParameters": {
                  "SR_TicketParame": {
                    "CustomFields": [
                      {
                        "AttributeName": "Title",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['title']}",
                        "GroupName": "Default Group"
                      },
                      {
                        "AttributeName": "Organization",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['organisationName']}",
                        "GroupName": "Default Group"
                      },
                      {
                        "AttributeName": "Product",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['productId']}",
                        "GroupName": "Default Group"
                      },
                      {
                        "AttributeName": "Subscription ID",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['billingSubscriptionId']}",
                        "GroupName": "Default Group"
                      }
                    ],
                    "Instance": "IT",
                    "LogSRForUserMode": true,
                    "RequesterEmailID": "@{body('Parse_JSON')?['value']?['submitterEmail']}",
                    "SRCustomFields": [
                      {
                        "AttributeName": "CRM TIcket ID",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['id']}",
                        "GroupName": "Integration"
                      },
                      {
                        "AttributeName": "CRM Case No",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['caseNumber']}",
                        "GroupName": "Integration"
                      },
                      {
                        "AttributeName": "Category",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['categoryName']}",
                        "GroupName": "Integration"
                      },
                      {
                        "AttributeName": "Sub Category",
                        "AttributeValue": "@{body('Parse_JSON')?['value']?['subCategoryName']}",
                        "GroupName": "Integration"
                      }
                    ],
                    "SRRemarks": "@{if(equals(body('Parse_JSON')?['value']?['description'],null),body('Parse_JSON')?['value']?['title'],body('Parse_JSON')?['value']?['description'])}",
                    "ServiceCatalogName": "CRM Service Request"
                  },
                  "_ProxyDetails": {
                    "APIKey": "/CKSK941L8qzzZzeFwhM5w/9765xW3dg5N7aTBAPslo=",
                    "AuthType": "APIKEY",
                    "OrgID": "1",
                    "ProxyID": 0,
                    "ReturnType": "JSON",
                    "TokenID": ""
                  }
                }
              },
              "runAfter": {},
              "type": "Compose"
            },
            "Condition_2": {
              "actions": {
                "Compose_3": {
                  "inputs": {
                    "extRefNumber": "@{body('Parse_JSON_3')?['TicketID_Internal']}"
                  },
                  "runAfter": {
                    "Parse_JSON_3": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose"
                },
                "HTTP_3": {
                  "inputs": {
                    "authentication": {
                      "audience": "bc67474e-612b-4d7f-b75a-ac54d45f143a",
                      "clientId": "ce633c1d-d8b4-4381-b68a-1f7d0851250f",
                      "secret": "WnIaXQ~IT~P.O3CyjZNmwnj42vC2FoK_B7",
                      "tenant": "24f9d756-bf0c-43e9-ad5e-2073ae2d6698",
                      "type": "ActiveDirectoryOAuth"
                    },
                    "body": "@outputs('Compose_3')",
                    "headers": {
                      "Content-Type": "application/json-patch+json"
                    },
                    "method": "PATCH",
                    "uri": "https://api.pre.sqcp.qa/case/api/servicerequests/@{body('Parse_JSON')?['value']?['id']}?api-version=1.0"
                  },
                  "runAfter": {
                    "Compose_3": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http"
                },
                "Parse_JSON_3": {
                  "inputs": {
                    "content": "@json(body('HTTP'))",
                    "schema": {
                      "properties": {
                        "TicketID_Internal": {
                          "type": "integer"
                        },
                        "TicketNo": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {},
                  "type": "ParseJson"
                }
              },
              "else": {
                "actions": {
                  "Terminate": {
                    "inputs": {
                      "runStatus": "Failed"
                    },
                    "runAfter": {},
                    "type": "Terminate"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@body('Parse_JSON_2')?['Errors']",
                      ""
                    ]
                  }
                ]
              },
              "runAfter": {
                "Parse_JSON_2": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "HTTP": {
              "inputs": {
                "body": "@outputs('Compose')",
                "headers": {
                  "Content-Type": "application/json"
                },
                "method": "POST",
                "uri": "https://itsm.pre.sqcp.qa/SummitProxyService/REST/Summit_RESTWCF.svc/RESTService/CommonWS_JsonObjCall"
              },
              "runAfter": {
                "Compose": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Parse_JSON_2": {
              "inputs": {
                "content": "@json(body('HTTP'))",
                "schema": {
                  "properties": {
                    "Errors": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            }
          },
          "else": {
            "actions": {
              "Condition_3": {
                "actions": {
                  "Compose_2": {
                    "inputs": {
                      "ServiceName": "SR_UpdateServiceRequest",
                      "objCommonParameters": {
                        "_ProxyDetails": {
                          "APIKey": "/CKSK941L8qzzZzeFwhM5w/9765xW3dg5N7aTBAPslo=",
                          "AuthType": "APIKEY",
                          "ProxyID": 0,
                          "ReturnType": "JSON"
                        },
                        "objSRServiceTicket": {
                          "CancellationRemarks": "Cancelled from CRM",
                          "IncidentTicketID": "@body('Parse_JSON')?['value']?['extRefNumber']",
                          "Org_ID": "1",
                          "Status": "@if(equals(body('Parse_JSON')?['value']?['statusReasonId'],6),'Cancelled',if(equals(body('Parse_JSON')?['value']?['statusReasonId'],2000),'Cancelled',null))",
                          "SupportFunction": "IT"
                        }
                      }
                    },
                    "runAfter": {},
                    "type": "Compose"
                  },
                  "HTTP_2": {
                    "inputs": {
                      "body": "@outputs('Compose_2')",
                      "headers": {
                        "Content-Type": "application/json"
                      },
                      "method": "POST",
                      "uri": "https://itsm.pre.sqcp.qa/SummitProxyService/REST/Summit_RESTWCF.svc/RESTService/CommonWS_JsonObjCall"
                    },
                    "runAfter": {
                      "Compose_2": [
                        "Succeeded"
                      ]
                    },
                    "type": "Http"
                  },
                  "Parse_JSON_4": {
                    "inputs": {
                      "content": "@json(body('HTTP_2'))",
                      "schema": {
                        "properties": {
                          "Errors": {
                            "type": "string"
                          },
                          "Input": {},
                          "Message": {
                            "type": "string"
                          },
                          "OrgID": {
                            "type": "integer"
                          },
                          "Output": {
                            "type": "string"
                          },
                          "OutputID": {
                            "type": "integer"
                          },
                          "OutputObject": {},
                          "TokenID": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "runAfter": {
                      "HTTP_2": [
                        "Succeeded"
                      ]
                    },
                    "type": "ParseJson"
                  }
                },
                "expression": {
                  "and": [
                    {
                      "not": {
                        "equals": [
                          "@body('Parse_JSON')?['value']?['extRefNumber']",
                          "@null"
                        ]
                      }
                    }
                  ]
                },
                "runAfter": {},
                "type": "If"
              }
            }
          },
          "expression": {
            "or": [
              {
                "equals": [
                  "@triggerBody()?['eventType']",
                  "servicerequest-routed-itsm"
                ]
              }
            ]
          },
          "runAfter": {
            "Parse_JSON": [
              "Succeeded"
            ]
          },
          "type": "If"
        },
        "Parse_JSON": {
          "inputs": {
            "content": "@triggerBody()?['data']",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "billingSubscriptionId": {
                      "type": "string"
                    },
                    "caseNumber": {
                      "type": "string"
                    },
                    "categoryId": {
                      "type": "string"
                    },
                    "categoryName": {
                      "type": "string"
                    },
                    "createdByName": {
                      "type": "string"
                    },
                    "createdOn": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "extRefNumber": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "files": {},
                    "firstResponseBy": {},
                    "id": {
                      "type": "string"
                    },
                    "isAssignToProvider": {
                      "type": "boolean"
                    },
                    "location": {},
                    "modifiedByName": {
                      "type": "string"
                    },
                    "modifiedOn": {
                      "type": "string"
                    },
                    "organisationName": {},
                    "parentId": {
                      "type": "string"
                    },
                    "priorityId": {
                      "type": "integer"
                    },
                    "productId": {
                      "type": "string"
                    },
                    "profileId": {
                      "type": "string"
                    },
                    "resolveBy": {},
                    "statusId": {
                      "type": "integer"
                    },
                    "statusReasonId": {
                      "type": "integer"
                    },
                    "subCategoryId": {
                      "type": "string"
                    },
                    "subCategoryName": {
                      "type": "string"
                    },
                    "submitterEmail": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "runAfter": {},
          "type": "ParseJson"
        }
      }
    },
    "workflowParameters": {
      "value": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        }
      }
    },
    "diagnosticLogsRetentionInDays": {
      "value": 365
    },
    "diagnosticStorageAccountId": {
      "value": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-mon-pre-we-01/providers/Microsoft.Storage/storageAccounts/stcppappsdiagprewe01"
    },
    "workspaceId": {
      "value": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-mon-pre-we-01/providers/Microsoft.OperationalInsights/workspaces/log-cpp-apps-mon-pre-we-01"
    },
    "eventHubAuthorizationRuleId": {
      "value": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-mon-pre-we-01/providers/Microsoft.EventHub/namespaces/evhns-cpp-apps-mon-pre-we-01/authorizationrules/RootManageSharedAccessKey"
    },
    "eventHubName": {
      "value": "evh-cpp-apps-mon-pre-we-01"
    },
    "tags": {
      "value": {
        "Environment": "Pre-Production"
      }
    },
    "connectionParameters": {
      "value": {
        "$connections": {
          "value": {
            "azureeventgrid": {
              "connectionId": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/resourceGroups/rg-cpp-apps-int-pre-we-01/providers/Microsoft.Web/connections/apicon-cpp-apps-integd-pre-we-01",
              "connectionName": "apicon-cpp-apps-integd-pre-we-01",
              "id": "/subscriptions/8964f3c1-44f5-4094-80eb-4334845bdfb1/providers/Microsoft.Web/locations/westeurope/managedApis/azureeventgrid"
            }
          }
        }
      }
    }
  }
}