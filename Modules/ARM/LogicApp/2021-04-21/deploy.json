{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflowName": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the workflow."
      }
    },
    "workflowLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "workflowSchema": {
      "type": "string",
      "metadata": {
        "description": "Required."
      }
    },
    "workflowTriggers": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional."
      }
    },
    "workflowActions": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional."
      }
    },
    "workflowParameters": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional."
      }
    },
    "logicAppState": {
      "type": "string",
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Optional."
      }
    },
    "connectionParameters": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional."
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 365,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of the Diagnostic Storage Account."
      }
    },
    "workspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of Log Analytics."
      }
    },
    "eventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "eventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the Logic App resource."
      }
    },
    "integrationServiceEnvironment": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Required. Integration Service Environment ID"
      }
    }
  },
  "variables": {
    "diagnosticsMetrics": [
      {
        "category": "AllMetrics",
        "enabled": true,
        "retentionPolicy": {
          "days": "[parameters('diagnosticLogsRetentionInDays')]",
          "enabled": true
        }
      }
    ],
    "diagnosticsLogs": [
      {
        "category": "WorkflowRuntime",
        "enabled": true,
        "retentionPolicy": {
          "days": "[parameters('diagnosticLogsRetentionInDays')]",
          "enabled": true
        }
      }
    ]
  },
  "resources": [
    {
      "apiVersion": "2016-10-01",
      "name": "[parameters('workflowName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('workflowLocation')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "definition": {
          "contentVersion": "1.0.0.0",
          "parameters": "[parameters('workflowParameters')]",
          "actions": "[parameters('workflowActions')]",
          "triggers": "[parameters('workflowTriggers')]",
          "outputs": {},
          "$schema": "[parameters('workflowSchema')]"
        },
        "integrationServiceEnvironment": {
          "id": "[parameters('integrationServiceEnvironment')]"
        },
        "parameters": "[parameters('connectionParameters')]",
        "state": "[parameters('logicAppState')]"
      },
      "resources": [
        {
          "type": "Microsoft.Logic/workflows/providers/diagnosticsettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat(parameters('workflowName'), '/Microsoft.Insights/service')]",
          "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))),not(empty(parameters('eventHubAuthorizationRuleId'))),not(empty(parameters('eventHubName'))))]",
          "dependsOn": [
            "[concat('Microsoft.Logic/workflows/', parameters('workflowName'))]"
          ],
          "properties": {
            "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
            "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
            "eventHubAuthorizationRuleId": "[if(empty(parameters('eventHubAuthorizationRuleId')), json('null'), parameters('eventHubAuthorizationRuleId'))]",
            "eventHubName": "[if(empty(parameters('eventHubName')), json('null'), parameters('eventHubName'))]",
            "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsMetrics'))]",
            "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId')), empty(parameters('eventHubAuthorizationRuleId')), empty(parameters('eventHubName'))), json('null'), variables('diagnosticsLogs'))]"
          }
        }
      ]
    }
  ],
  "outputs": {
    "LogicAppRegion": {
      "type": "string",
      "value": "[parameters('workflowLocation')]",
      "metadata": {
        "description": "The Region of the LogicApp."
      }
    },
    "LogicAppResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group the LogicApp was created in."
      }
    }
  },
  "functions": []
}