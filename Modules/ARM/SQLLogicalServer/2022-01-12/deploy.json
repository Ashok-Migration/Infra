{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serverName": {
            "type": "string",
            "metadata": {
                "description": "Required. The name of the SQL logical server."
            }
        },
        "administratorLogin": {
            "type": "string",
            "metadata": {
                "description": "Required. The administrator username of the SQL logical server."
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Required. The administrator password of the SQL logical server."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "enableADS": {
            "defaultValue": false,
            "type": "bool",
            "metadata": {
                "description": "Optional. Enable Advanced Data Security, the user deploying the template must have an administrator or owner permissions."
            }
        },
        "allowAzureIPs": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Optional. Allow Azure services to access server."
            }
        },
        "connectionType": {
            "defaultValue": "Default",
            "allowedValues": [ "Default", "Redirect", "Proxy" ],
            "type": "string",
            "metadata": {
                "description": "Optional. SQL logical server connection type."
            }
        },
        "privateEndpointNameSqlonDemand": {
            "type": "String"
        },
        "subnetName": {
            "type": "String"
        },
        "virtualNetworkName": {
            "type": "String"
        },
        "networkRG": {
            "type": "String"
        },
        "targetSubResourceSqlOnDemand": {
            "type": "Array"
        },
        "storageName": {
            "type": "String",
            "defaultValue": ""
        },
        "tags": {
            "defaultValue": {
            },
            "metadata": {
                "description": "Optional. Resource tags."
            },
            "type": "object"
        }
    },
    "variables": {
        "serverResourceGroupName": "[resourceGroup().name]",
        "subscriptionId": "[subscription().subscriptionId]",
        "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('serverResourceGroupName'), parameters('location'))]",
        "storageName": "[if(empty(parameters('storageName')), 'stcpddatadevwe01', parameters('storageName'))]",
        "uniqueRoleGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('serverName')))]",
        "StorageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "vnetId": "[concat(subscription().id, '/resourceGroups/', parameters('networkRG'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "subnetId": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "privateDnsZoneId": "[concat(subscription().id, '/resourceGroups/', parameters('networkRG'), '/providers/Microsoft.Network/privateDnsZones/privatelink.database.windows.net')]"
    },
    "resources": [
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2018-06-01-preview",
            "name": "[parameters('serverName')]",
            "location": "[parameters('location')]",
            "identity": "[if(parameters('enableADS'), json('{\"type\":\"SystemAssigned\"}'), json('null'))]",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0"
            },
            "tags": "[parameters('tags')]",
            "resources": [
                {
                    "condition": "[parameters('allowAzureIPs')]",
                    "type": "firewallRules",
                    "apiVersion": "2018-06-01-preview",
                    "name": "AllowAllWindowsAzureIps",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
                    ],
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                },
                {
                    "condition": "[parameters('enableADS')]",
                    "type": "securityAlertPolicies",
                    "apiVersion": "2017-03-01-preview",
                    "name": "Default",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
                    ],
                    "properties": {
                        "state": "Enabled",
                        "emailAccountAdmins": true
                    }
                },
                {
                    "condition": "[parameters('enableADS')]",
                    "type": "vulnerabilityAssessments",
                    "apiVersion": "2018-06-01-preview",
                    "name": "Default",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                        "[resourceId('Microsoft.Sql/servers/securityAlertPolicies', parameters('serverName'), 'Default')]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
                    ],
                    "properties": {
                        "storageContainerPath": "[if(parameters('enableADS'), concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.blob, 'vulnerability-assessment'), json('null'))]",
                        "recurringScans": {
                            "isEnabled": true,
                            "emailSubscriptionAdmins": true
                        }
                    }
                },
                {
                    "type": "connectionPolicies",
                    "apiVersion": "2014-04-01",
                    "name": "Default",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
                    ],
                    "properties": {
                        "connectionType": "[parameters('connectionType')]"
                    }
                }
            ]
        },
        {
            "condition": "[parameters('enableADS')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "tags": "[parameters('tags')]",
            "resources": [
                {
                    "condition": "[parameters('enableADS')]",
                    "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                    "apiVersion": "2018-09-01-preview",
                    "name": "[concat(variables('storageName'), '/Microsoft.Authorization/', variables('uniqueRoleGuid') )]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
                    ],
                    "properties": {
                        "roleDefinitionId": "[variables('StorageBlobContributor')]",
                        "principalId": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName')), '2018-06-01-preview', 'Full').identity.principalId]",
                        "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
                        "principalType": "ServicePrincipal"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-03-01",
            "name": "[parameters('privateEndpointNameSqlOnDemand')]",
            "dependsOn": [
                "[parameters('serverName')]"
            ],
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "subnet": {
                "id": "[variables('subnetId')]"
                },
                "privateLinkServiceConnections": [
                {
                    "name": "[parameters('privateEndpointNameSqlOnDemand')]",
                    "properties": {
                    "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                    "groupIds": "[parameters('targetSubResourceSqlOnDemand')]"
                    }
                }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "SQL-PrivateDnsZoneDeployment",
            "dependsOn": [
                "[parameters('privateEndpointNameSqlOnDemand')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "resources": [
                    {
                    "apiVersion": "2017-05-10",
                    "name": "SQL-PrivateDnsZone",
                    "type": "Microsoft.Resources/deployments",
                    "subscriptionId": "[variables('SubscriptionId')]",
                    "resourceGroup": "[parameters('networkRG')]",
                    "properties": {
                        "mode": "Incremental",
                        "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "resources": [
                            {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "privatelink.database.windows.net",
                            "location": "global",
                            "tags": {},
                            "properties": {}
                            }
                        ]
                        }
                    }
                    }
                ]
                }
            }
        },
        {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2017-05-10",
        "name": "SQL-VirtualNetworkLinkDeployment",
        "dependsOn": [
            "SQL-PrivateDnsZoneDeployment"
        ],
        "properties": {
            "mode": "Incremental",
            "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": [
                {
                "apiVersion": "2017-05-10",
                "name": "SQL-VirtualNetworklink",
                "type": "Microsoft.Resources/deployments",
                "subscriptionId": "[variables('SubscriptionId')]",
                "resourceGroup": "[parameters('networkRG')]",
                "properties": {
                    "mode": "Incremental",
                    "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                        "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                        "apiVersion": "2018-09-01",
                        "name": "[concat('privatelink.database.windows.net', '/', uniqueString(variables('vnetId')))]",
                        "location": "global",
                        "properties": {
                            "virtualNetwork": {
                            "id": "[variables('vnetId')]"
                            },
                            "registrationEnabled": false
                        }
                        }
                    ]
                    }
                }
                }
            ]
            }
        }
        },
        {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2017-05-10",
        "name": "SQL-DnsZoneGroupDeployment",
        "dependsOn": [
            "[parameters('privateEndpointNameSqlOnDemand')]",
            "SQL-PrivateDnsZoneDeployment"
        ],
        "properties": {
            "mode": "Incremental",
            "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "resources": [
                {
                "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                "apiVersion": "2020-03-01",
                "name": "[concat(parameters('privateEndpointNameSqlOnDemand'), '/', 'default')]",
                "location": "[parameters('location')]",
                "properties": {
                    "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-database-windows-ondemand-net",
                        "properties": {
                        "privateDnsZoneId": "[variables('privateDnsZoneId')]"
                        }
                    }
                    ]
                }
                }
            ]
            }
        },
        "resourceGroup": "[resourceGroup().name]"
        }
    ],
    "outputs": {
        "ServerRegion": {
            "type": "string",
            "value": "[parameters('location')]",
            "metadata": {
                "description": "The Region of the server"
            }
        },
        "ServerResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the Resource Group the server was created in."
            }
        }
    },
    "functions": []
}