{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "name": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "defaultDataLakeStorageAccountName": {
      "type": "string"
    },
    "defaultDataLakeStorageFilesystemName": {
      "type": "string"
    },
    "sqlAdministratorLogin": {
      "type": "string"
    },
    "sqlAdministratorLoginPassword": {
      "type": "secureString"
    },
    "setWorkspaceIdentityRbacOnStorageAccount": {
      "type": "bool"
    },
    "allowAllConnections": {
      "type": "bool"
    },
    "grantWorkspaceIdentityControlForSql": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ]
    },
    "managedVirtualNetwork": {
      "type": "string"
    },
    "tagValues": {
      "type": "object"
    },
    "storageSubscriptionID": {
      "type": "string",
      "defaultValue": "[subscription().subscriptionId]"
    },
    "storageResourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "storageLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "storageRoleUniqueId": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "isNewStorageAccount": {
      "type": "bool",
      "defaultValue": false
    },
    "isNewFileSystemOnly": {
      "type": "bool",
      "defaultValue": false
    },
    "adlaResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "storageAccessTier": {
      "type": "string",
      "defaultValue": "Hot"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "StorageV2"
    },
    "storageSupportsHttpsTrafficOnly": {
      "type": "bool",
      "defaultValue": false
    },
    "storageKind": {
      "type": "string",
      "defaultValue": "StorageV2"
    },
    "storageIsHnsEnabled": {
      "type": "bool",
      "defaultValue": true
    },
    "userObjectId": {
      "type": "string",
      "defaultValue": ""
    },
    "setSbdcRbacOnStorageAccount": {
      "type": "bool",
      "defaultValue": false
    },
    "privateEndpointNameSql": {
      "type": "String"
    },
    "privateEndpointNameSqlonDemand": {
      "type": "String"
    },
    "targetSubResourceSqlOnDemand": {
      "type": "Array"
    },
    "targetSubResourceSql": {
      "type": "Array"
    },
    "subnetName": {
      "type": "String"
    },
    "virtualNetworkName": {
      "type": "String"
    },
    "SubscriptionId": {
      "type": "String"
    },
    "networkRG": {
      "type": "String"
    },
    "RG": {
      "type": "String"
    }
  },
  "variables": {
    "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "defaultDataLakeStorageAccountUrl": "[concat('https://', parameters('defaultDataLakeStorageAccountName'), '.dfs.core.windows.net')]",
    "vnetId": "[concat('/subscriptions/',parameters('SubscriptionId'), '/resourceGroups/', parameters('networkRG'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
    "subnetId": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "privateLinkResource": "[concat('/subscriptions/',parameters('SubscriptionId'), '/resourceGroups/', parameters('RG'), '/providers/Microsoft.Synapse/workspaces/', parameters('name'))]",
    "privateDnsZoneId": "[concat('/subscriptions/',parameters('SubscriptionId'), '/resourceGroups/', parameters('networkRG'), '/providers/Microsoft.Network/privateDnsZones/privatelink.sql.azuresynapse.net')]",
    
  },
  "resources": [
    {
      "apiVersion": "2019-06-01-preview",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "type": "Microsoft.Synapse/workspaces",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "defaultDataLakeStorage": {
          "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
          "filesystem": "[parameters('defaultDataLakeStorageFilesystemName')]"
        },
        "sqlAdministratorLogin": "[parameters('sqlAdministratorLogin')]",
        "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "adlaResourceId": "[parameters('adlaResourceId')]",
        "managedVirtualNetwork": "[parameters('managedVirtualNetwork')]"
      },
      "resources": [
        {
          "condition": "[parameters('allowAllConnections')]",
          "apiVersion": "2019-06-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
          ],
          "location": "[parameters('location')]",
          "name": "allowAll",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
          },
          "type": "firewallrules"
        },
        {
          "apiVersion": "2019-06-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
          ],
          "location": "[parameters('location')]",
          "name": "default",
          "properties": {
            "grantSqlControlToManagedIdentity": {
              "desiredState": "[parameters('grantWorkspaceIdentityControlForSql')]"
            }
          },
          "type": "managedIdentitySqlControlSettings"
        }
      ],
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]",
        "[concat('Microsoft.Resources/deployments/', parameters('defaultDataLakeStorageFilesystemName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "condition": "[parameters('setWorkspaceIdentityRbacOnStorageAccount')]",
      "apiVersion": "2019-05-01",
      "name": "storageRoleDeploymentResource",
      "type": "Microsoft.Resources/deployments",
      "subscriptionId": "[parameters('storageSubscriptionID')]",
      "resourceGroup": "[parameters('storageResourceGroupName')]",
      "dependsOn": [
        "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
              "apiVersion": "2018-09-01-preview",
              "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('name'), '/', parameters('storageRoleUniqueId'))))]",
              "location": "[parameters('storageLocation')]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', parameters('name')), '2019-06-01-preview', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[parameters('setSbdcRbacOnStorageAccount')]",
              "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
              "apiVersion": "2018-09-01-preview",
              "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', parameters('userObjectId'), '/', parameters('storageRoleUniqueId'))))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[parameters('userObjectId')]",
                "principalType": "User"
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[parameters('isNewStorageAccount')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('defaultDataLakeStorageAccountName')]",
      "apiVersion": "2018-02-01",
      "location": "[parameters('storageLocation')]",
      "properties": {
        "accessTier": "[parameters('storageAccessTier')]",
        "supportsHttpsTrafficOnly": "[parameters('storageSupportsHttpsTrafficOnly')]",
        "isHnsEnabled": "[parameters('storageIsHnsEnabled')]"
      },
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "[parameters('storageKind')]",
      "tags": {},
      "resources": [
        {
          "condition": "[parameters('isNewStorageAccount')]",
          "name": "[concat('default/', parameters('defaultDataLakeStorageFilesystemName'))]",
          "type": "blobServices/containers",
          "apiVersion": "2018-02-01",
          "properties": {
            "publicAccess": "None"
          },
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', parameters('defaultDataLakeStorageAccountName'))]"
          ]
        }
      ]
    },
    {
      "condition": "[parameters('isNewFileSystemOnly')]",
      "apiVersion": "2019-05-01",
      "name": "[parameters('defaultDataLakeStorageFilesystemName')]",
      "type": "Microsoft.Resources/deployments",
      "subscriptionId": "[parameters('storageSubscriptionID')]",
      "resourceGroup": "[parameters('storageResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "name": "[concat(parameters('defaultDataLakeStorageAccountName'), '/default/', parameters('defaultDataLakeStorageFilesystemName'))]",
              "apiVersion": "2018-02-01",
              "properties": {
                "publicAccess": "None"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-03-01",
      "name": "[parameters('privateEndpointNameSqlOnDemand')]",
      "dependsOn": [
        "[parameters('name')]"
      ],
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "subnet": {
          "id": "[variables('subnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('privateEndpointNameSqlOnDemand')]",
            "properties": {
              "privateLinkServiceId": "[variables('privateLinkResource')]",
              "groupIds": "[parameters('targetSubResourceSqlOnDemand')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-03-01",
      "name": "[parameters('privateEndpointNameSql')]",
      "dependsOn": [
        "[parameters('name')]"
      ],
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "subnet": {
          "id": "[variables('subnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('privateEndpointNameSql')]",
            "properties": {
              "privateLinkServiceId": "[variables('privateLinkResource')]",
              "groupIds": "[parameters('targetSubResourceSql')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "PrivateDnsZoneDeployment",
      "dependsOn": [
        "[parameters('privateEndpointNameSqlOnDemand')]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2017-05-10",
              "name": "PrivateDnsZone",
              "type": "Microsoft.Resources/deployments",
              "subscriptionId": "[parameters('SubscriptionId')]",
              "resourceGroup": "[parameters('networkRG')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2018-09-01",
                      "name": "privatelink.sql.azuresynapse.net",
                      "location": "global",
                      "tags": {},
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "VirtualNetworkLinkDeployment",
      "dependsOn": [
        "PrivateDnsZoneDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2017-05-10",
              "name": "VirtualNetworklink",
              "type": "Microsoft.Resources/deployments",
              "subscriptionId": "[parameters('SubscriptionId')]",
              "resourceGroup": "[parameters('networkRG')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2018-09-01",
                      "name": "[concat('privatelink.sql.azuresynapse.net', '/', uniqueString(variables('vnetId')))]",
                      "location": "global",
                      "properties": {
                        "virtualNetwork": {
                          "id": "[variables('vnetId')]"
                        },
                        "registrationEnabled": false
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "DnsZoneGroupDeployment",
      "dependsOn": [
        "[parameters('privateEndpointNameSql')]",
        "PrivateDnsZoneDeployment"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2020-03-01",
              "name": "[concat(parameters('privateEndpointNameSql'), '/', 'default')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-sql-azuresynapse-net",
                    "properties": {
                      "privateDnsZoneId": "[variables('privateDnsZoneId')]"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2020-03-01",
              "name": "[concat(parameters('privateEndpointNameSqlOnDemand'), '/', 'default')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "privatelink-sql-azuresynapse-ondemand-net",
                    "properties": {
                      "privateDnsZoneId": "[variables('privateDnsZoneId')]"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "resourceGroup": "[parameters('RG')]"
    }
  ],
  "functions": [],
  "outputs": {}
}