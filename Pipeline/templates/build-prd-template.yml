parameters:
  name: "--"
  prdenvironments: ["pre", "prd"]

jobs:
  # Upload artifacts for pre and prd environments
  - ${{ each environment in parameters.prdenvironments }}:
      - job: ${{ parameters.name }}_build_for_APIM_${{ environment }}
        dependsOn: Build_Queue
        condition: and(and(succeeded(), eq(variables.isProdEnvironment, true)), or(contains(dependencies.Build_Queue.outputs['setBuildQueue.buildQueue'], '${{ parameters.name }}'), contains(dependencies.Build_Queue.outputs['setBuildQueue.buildQueue'], 'AllApis')))
        variables:
          - ${{ if eq(environment, 'pre') }}:
              - group: pre
              - name: AppinsightsName
                value: "appi-cpp-shrd-mon-pre-we-01"
              - name: AppinsightsInstrumentationKey
                value: "7ac19769-96b6-49d3-812e-84e69c5f52d8"
              - name: ApimPublicUrl
                value: https://api.pre.sqcp.qa
              - name: ApimDevPortalUrl
                value: https://developer.pre.sqcp.qa
              - name: MarketPlaceUrl
                value: https://marketplace.pre.sqcp.qa
              - name: MyTasmuUrl
                value: https://mytasmu.pre.sqcp.qa
              - name: OpenDataUrl
                value: https://opendata.pre.sqcp.qa
              - name: SqcpAdminPortalUrl
                value: https://cpadmin.pre.sqcp.qa
              - name: CdnUrl
                value: https://pre-cdntasmu.azureedge.net
              - name: AccountPortalUrl
                value: https://account.pre.sqcp.qa
              - name: BackOfficePortalUrl
                value: https://ordering-tool.pre.sqcp.qa
              - name: bpm-apim-user
                value: bpmpspreapim
              - name: b2c-tenant-id
                value: 26aa757b-a20c-4270-bc1c-d946b1f3e4a2
              - name: b2c-tenant-name
                value: tasmucpb2cprod
              - name: bpm-app-clientid
                value: ea3ec2b2-2ed8-42fe-bc35-e2800171c01e
              - name: ngis-app-clientid
                value: 7ca55d50-fa7d-4db4-b91b-586db37655e2
              - name: ttcc-app-clientid
                value: a6d79139-80bf-43dd-a27c-2976d0fd7a1b
              - name: uber-username
                value: uberadmin
              - name: uber-password
                value: U7bvr{8=Ad$rdfHG
              - name: BlockEmailDomainList
                value: test, @cosaxu.com, @xcoxc.com, @inboxmail.life
          - ${{ if eq(environment, 'prd') }}:
              - group: prd
              - name: AppinsightsName
                value: "appi-cpp-shrd-mon-prd-we-01"
              - name: AppinsightsInstrumentationKey
                value: "3971daa3-1ef5-40b6-b339-abac007d001a"
              - name: ApimPublicUrl
                value: https://api.tasmu.gov.qa
              - name: ApimDevPortalUrl
                value: https://developer.tasmu.gov.qa
              - name: MarketPlaceUrl
                value: https://platform.tasmu.gov.qa
              - name: MyTasmuUrl
                value: https://mytasmu.tasmu.gov.qa
              - name: OpenDataUrl
                value: https://opendata.tasmu.gov.qa
              - name: SqcpAdminPortalUrl
                value: https://cpadmin.tasmu.gov.qa
              - name: CdnUrl
                value: https://prd-cdntasmu.azureedge.net
              - name: AccountPortalUrl
                value: https://account.tasmu.gov.qa
              - name: BackOfficePortalUrl
                value: https://ordering-tool.tasmu.gov.qa
              - name: bpm-apim-user
                value: bpmpsprdapim
              - name: b2c-tenant-id
                value: 26aa757b-a20c-4270-bc1c-d946b1f3e4a2
              - name: b2c-tenant-name
                value: tasmucpb2cprod
              - name: bpm-app-clientid
                value: ea3ec2b2-2ed8-42fe-bc35-e2800171c01e
              - name: ngis-app-clientid
                value: 7ca55d50-fa7d-4db4-b91b-586db37655e2
              - name: ttcc-app-clientid
                value: a6d79139-80bf-43dd-a27c-2976d0fd7a1b
              - name: uber-username
                value: uberadmin
              - name: uber-password
                value: U7bvr{8=Ad$rdfHG
              - name: BlockEmailDomainList
                value: test, @cosaxu.com, @xcoxc.com, @inboxmail.life
        steps:
          - task: UseDotNet@2
            displayName: $(Environment) Use Dotnet 2.1
            inputs:
              packageType: sdk
              version: 2.1.x
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: PowerShell@2
            displayName: "Create repository folder (workaround)"
            inputs:
              targetType: inline
              script: |
                New-Item -Path . -Name "$(Build.Repository.Name)" -Force -ItemType "directory" # Equals "self"
              pwsh: true

          - task: PowerShell@2
            displayName: "Create repository folder for devops kit(workaround)"
            inputs:
              targetType: inline
              script: |
                New-Item -Path . -Name "apim-devopskit" -Force -ItemType "directory" # Equals "self"
              pwsh: true

          - checkout: apis-repo
            clean: true
            path: apis-repo

          - checkout: apim-devopskit
            clean: true
            path: apim-devopskit

          - task: CmdLine@2
            displayName: $(Environment) Create APIMTemplate Tool
            inputs:
              script: |
                dotnet restore
                dotnet pack -c Release
                cd $(Agent.BuildDirectory)/apis-repo/pipelines/APIM/src
                dotnet new tool-manifest
                dotnet tool install --add-source "$(Agent.BuildDirectory)/apim-devopskit/src/APIM_ARMTemplate/apimtemplate/bin/Release" apimtemplate
              workingDirectory: "$(Agent.BuildDirectory)/apim-devopskit/src/APIM_ARMTemplate/apimtemplate"
              failOnStderr: true

          - task: CmdLine@2
            displayName: $(Environment) Generate ARM templates using Tool
            inputs:
              script: 'dotnet tool run apim-templates create --appInsightsInstrumentationKey $(AppinsightsInstrumentationKey) --appInsightsName  $(AppinsightsName) --namedValues "Azure-Search-Key|$(Azure-Search-Key);Bot-Directline-Key|$(Bot-Directline-Key);ApimPublicUrl|$(ApimPublicUrl);ApimDevPortalUrl|$(ApimDevPortalUrl);MarketPlaceUrl|$(MarketPlaceUrl);MyTasmuUrl|$(MyTasmuUrl);OpenDataUrl|$(OpenDataUrl);SqcpAdminPortalUrl|$(SqcpAdminPortalUrl);CdnUrl|$(CdnUrl);AccountPortalUrl|$(AccountPortalUrl);BackOfficePortalUrl|$(BackOfficePortalUrl);bpm-apim-user|$(bpm-apim-user);bpm-apim-pwd|$(BPM-APIM-Password);b2c-tenant-id|$(b2c-tenant-id);b2c-tenant-name|$(b2c-tenant-name);bpm-app-clientid|$(bpm-app-clientid);ngis-app-clientid|$(ngis-app-clientid);ngis-app-token|$(NGIS-App-Token);ttcc-app-clientid|$(ttcc-app-clientid);uber-username|$(uber-username);uber-password|$(uber-password);BlockEmailDomainList|$(BlockEmailDomainList);" --configFile "./Input/valid.yml" --backendurlconfigFile "./Input/TemplateAndParameters/$(Environment)/BackendUrlParameters.json" --preferredAPIsForDeployment ${{ parameters.name }} --apimNameValue $(Environment)${{ parameters.name }}we01'
              workingDirectory: "$(Agent.BuildDirectory)/apis-repo/pipelines/APIM/src"
              failOnStderr: true

          - task: AzureCLI@1
            displayName: $(Environment) Copy Module to $(componentStorageAccountNamePrd)
            inputs:
              azureSubscription: $(serviceConnectionPrd)
              scriptLocation: inlineScript
              inlineScript: |
                az storage blob upload-batch --source "$(Agent.BuildDirectory)/apis-repo/pipelines/APIM/src/Output" --destination "$(componentStorageContainerName)/APIMConfig/ARM/$(Environment)/${{ parameters.name }}" --account-name "$(componentStorageAccountNamePrd)" --subscription  "$(componentStorageAccountSubscriptionIdPrd)" --overwrite

          - task: AzureCLI@1
            displayName: $(Environment) Copy Other files in Module to $(componentStorageAccountNamePrd)
            inputs:
              azureSubscription: $(serviceConnectionPrd)
              scriptLocation: inlineScript
              inlineScript: |
                az storage blob upload-batch --source "$(Agent.BuildDirectory)/apis-repo/pipelines/APIM/src/Input/TemplateAndParameters/$(Environment)" --destination "$(componentStorageContainerName)/APIMConfig/ARM/$(Environment)/${{ parameters.name }}" --account-name "$(componentStorageAccountNamePrd)" --subscription  "$(componentStorageAccountSubscriptionIdPrd)" --overwrite
